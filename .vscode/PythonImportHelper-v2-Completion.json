[
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "FormHelper",
        "importPath": "crispy_forms.helper",
        "description": "crispy_forms.helper",
        "isExtraImport": true,
        "detail": "crispy_forms.helper",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Div",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "HTML",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Div",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "HTML",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Div",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "HTML",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Button",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "HTML",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Layout",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Div",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Submit",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "HTML",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Field",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Row",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "crispy_forms.layout",
        "description": "crispy_forms.layout",
        "isExtraImport": true,
        "detail": "crispy_forms.layout",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "isExtraImport": true,
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "connection",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "connections",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "OperationalError",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "CompaniesForm",
        "importPath": "apps.administrator.forms.companiesForm",
        "description": "apps.administrator.forms.companiesForm",
        "isExtraImport": true,
        "detail": "apps.administrator.forms.companiesForm",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "apps.administrator.forms.createuserForm",
        "description": "apps.administrator.forms.createuserForm",
        "isExtraImport": true,
        "detail": "apps.administrator.forms.createuserForm",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "apps.administrator.forms.createuserForm",
        "description": "apps.administrator.forms.createuserForm",
        "isExtraImport": true,
        "detail": "apps.administrator.forms.createuserForm",
        "documentation": {}
    },
    {
        "label": "send_template_email",
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "isExtraImport": true,
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "send_template_email",
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "isExtraImport": true,
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "send_template_email",
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "isExtraImport": true,
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "send_template_email",
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "isExtraImport": true,
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "send_template_email2",
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "isExtraImport": true,
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "send_template_email3",
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "isExtraImport": true,
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "send_template_email",
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "isExtraImport": true,
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "send_template_email",
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "isExtraImport": true,
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contabgrupos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipodocumento",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Cargos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Centrotrabajo",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Paises",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipodenomina",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipocontrato",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "ModelosContratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tiposalario",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Bancos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Costos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Subcostos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Entidadessegsocial",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Sedes",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contabgrupos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipodocumento",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Cargos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Centrotrabajo",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Paises",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipodenomina",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Profesiones",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipocontrato",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "ModelosContratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tiposalario",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Bancos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Costos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Subcostos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Entidadessegsocial",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Costos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Sedes",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Entidadessegsocial",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contabgrupos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Costos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipodocumento",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Paises",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Bancos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Cargos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Costos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Subcostos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Centrotrabajo",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Sedes",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Entidadessegsocial",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipodocumento",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "ModelosContratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tiposalario",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Paises",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Subcostos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Costos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Profesiones",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipocontrato",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Centrotrabajo",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Sedes",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipodocumento",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Paises",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Profesiones",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Liquidacion",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "NominaComprobantes",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Liquidacion",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Centrotrabajo",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "NominaComprobantes",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "isExtraImport": true,
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "check_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "check_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "check_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "RolesForm",
        "importPath": "apps.administrator.forms.rolesForm",
        "description": "apps.administrator.forms.rolesForm",
        "isExtraImport": true,
        "detail": "apps.administrator.forms.rolesForm",
        "documentation": {}
    },
    {
        "label": "Roles",
        "importPath": "apps.administrator.models",
        "description": "apps.administrator.models",
        "isExtraImport": true,
        "detail": "apps.administrator.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "apps",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "TempSession",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "default_login",
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "isExtraImport": true,
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "openpyxl",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "openpyxl",
        "description": "openpyxl",
        "detail": "openpyxl",
        "documentation": {}
    },
    {
        "label": "Workbook",
        "importPath": "openpyxl",
        "description": "openpyxl",
        "isExtraImport": true,
        "detail": "openpyxl",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "CostcenterForm",
        "importPath": "apps.companies.forms.CostcenterForm",
        "description": "apps.companies.forms.CostcenterForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.CostcenterForm",
        "documentation": {}
    },
    {
        "label": "EmployeeForm",
        "importPath": "apps.companies.forms.EmployeeForm",
        "description": "apps.companies.forms.EmployeeForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.EmployeeForm",
        "documentation": {}
    },
    {
        "label": "EmployeeForm",
        "importPath": "apps.companies.forms.EmployeeForm",
        "description": "apps.companies.forms.EmployeeForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.EmployeeForm",
        "documentation": {}
    },
    {
        "label": "EmployeeForm",
        "importPath": "apps.companies.forms.EmployeeForm",
        "description": "apps.companies.forms.EmployeeForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.EmployeeForm",
        "documentation": {}
    },
    {
        "label": "AbstractConceptForm",
        "importPath": "apps.companies.forms.AbstractConceptForm",
        "description": "apps.companies.forms.AbstractConceptForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.AbstractConceptForm",
        "documentation": {}
    },
    {
        "label": "format_value",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value_float",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value_void",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value",
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "isExtraImport": true,
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "formttex",
        "importPath": "apps.components.format",
        "description": "apps.components.format",
        "isExtraImport": true,
        "detail": "apps.components.format",
        "documentation": {}
    },
    {
        "label": "formtnun",
        "importPath": "apps.components.format",
        "description": "apps.components.format",
        "isExtraImport": true,
        "detail": "apps.components.format",
        "documentation": {}
    },
    {
        "label": "datos_cliente",
        "importPath": "apps.components.datacompanies",
        "description": "apps.components.datacompanies",
        "isExtraImport": true,
        "detail": "apps.components.datacompanies",
        "documentation": {}
    },
    {
        "label": "datos_cliente",
        "importPath": "apps.components.datacompanies",
        "description": "apps.components.datacompanies",
        "isExtraImport": true,
        "detail": "apps.components.datacompanies",
        "documentation": {}
    },
    {
        "label": "datos_cliente",
        "importPath": "apps.components.datacompanies",
        "description": "apps.components.datacompanies",
        "isExtraImport": true,
        "detail": "apps.components.datacompanies",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "chargesForm",
        "importPath": "apps.companies.forms.chargesForm",
        "description": "apps.companies.forms.chargesForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.chargesForm",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "ContractForm",
        "importPath": "apps.companies.forms.ContractForm",
        "description": "apps.companies.forms.ContractForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.ContractForm",
        "documentation": {}
    },
    {
        "label": "headquartersForm",
        "importPath": "apps.companies.forms.headquartersForm",
        "description": "apps.companies.forms.headquartersForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.headquartersForm",
        "documentation": {}
    },
    {
        "label": "generate_qr_code",
        "importPath": "apps.components.qrgenerate",
        "description": "apps.components.qrgenerate",
        "isExtraImport": true,
        "detail": "apps.components.qrgenerate",
        "documentation": {}
    },
    {
        "label": "ContractForm",
        "importPath": "apps.companies.forms.ContractForm ",
        "description": "apps.companies.forms.ContractForm ",
        "isExtraImport": true,
        "detail": "apps.companies.forms.ContractForm ",
        "documentation": {}
    },
    {
        "label": "NombreDBSingleton",
        "importPath": "apps.login.middlewares",
        "description": "apps.login.middlewares",
        "isExtraImport": true,
        "detail": "apps.login.middlewares",
        "documentation": {}
    },
    {
        "label": "NombreDBSingleton",
        "importPath": "apps.login.middlewares",
        "description": "apps.login.middlewares",
        "isExtraImport": true,
        "detail": "apps.login.middlewares",
        "documentation": {}
    },
    {
        "label": "ReportFilterForm",
        "importPath": "apps.companies.forms.ReportFilterForm",
        "description": "apps.companies.forms.ReportFilterForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.ReportFilterForm",
        "documentation": {}
    },
    {
        "label": "pisa",
        "importPath": "xhtml2pdf",
        "description": "xhtml2pdf",
        "isExtraImport": true,
        "detail": "xhtml2pdf",
        "documentation": {}
    },
    {
        "label": "pisa",
        "importPath": "xhtml2pdf",
        "description": "xhtml2pdf",
        "isExtraImport": true,
        "detail": "xhtml2pdf",
        "documentation": {}
    },
    {
        "label": "pisa",
        "importPath": "xhtml2pdf",
        "description": "xhtml2pdf",
        "isExtraImport": true,
        "detail": "xhtml2pdf",
        "documentation": {}
    },
    {
        "label": "pisa",
        "importPath": "xhtml2pdf",
        "description": "xhtml2pdf",
        "isExtraImport": true,
        "detail": "xhtml2pdf",
        "documentation": {}
    },
    {
        "label": "generate_summary",
        "importPath": "apps.components.payrollgenerate",
        "description": "apps.components.payrollgenerate",
        "isExtraImport": true,
        "detail": "apps.components.payrollgenerate",
        "documentation": {}
    },
    {
        "label": "genera_comprobante",
        "importPath": "apps.components.payrollgenerate",
        "description": "apps.components.payrollgenerate",
        "isExtraImport": true,
        "detail": "apps.components.payrollgenerate",
        "documentation": {}
    },
    {
        "label": "genera_comprobante",
        "importPath": "apps.components.payrollgenerate",
        "description": "apps.components.payrollgenerate",
        "isExtraImport": true,
        "detail": "apps.components.payrollgenerate",
        "documentation": {}
    },
    {
        "label": "ObjectDoesNotExist",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "MultipleObjectsReturned",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "workcertificategenerator",
        "importPath": "apps.components.workcertificategenerator",
        "description": "apps.components.workcertificategenerator",
        "isExtraImport": true,
        "detail": "apps.components.workcertificategenerator",
        "documentation": {}
    },
    {
        "label": "workcertificatedownload",
        "importPath": "apps.components.workcertificategenerator",
        "description": "apps.components.workcertificategenerator",
        "isExtraImport": true,
        "detail": "apps.components.workcertificategenerator",
        "documentation": {}
    },
    {
        "label": "workcertificategenerator",
        "importPath": "apps.components.workcertificategenerator",
        "description": "apps.components.workcertificategenerator",
        "isExtraImport": true,
        "detail": "apps.components.workcertificategenerator",
        "documentation": {}
    },
    {
        "label": "workcertificatedownload",
        "importPath": "apps.components.workcertificategenerator",
        "description": "apps.components.workcertificategenerator",
        "isExtraImport": true,
        "detail": "apps.components.workcertificategenerator",
        "documentation": {}
    },
    {
        "label": "Certificaciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Crearnomina",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Certificaciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "EmpVacaciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Tipoavacaus",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Ingresosyretenciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Ingresosyretenciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Certificaciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Crearnomina",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Vacaciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "EmpVacaciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Vacaciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Festivos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Tipoavacaus",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Certificaciones",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Tipocontrato",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Crearnomina",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "isExtraImport": true,
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "workplaceForm",
        "importPath": "apps.companies.forms.workplaceForm",
        "description": "apps.companies.forms.workplaceForm",
        "isExtraImport": true,
        "detail": "apps.companies.forms.workplaceForm",
        "documentation": {}
    },
    {
        "label": "ModelBackend",
        "importPath": "django.contrib.auth.backends",
        "description": "django.contrib.auth.backends",
        "isExtraImport": true,
        "detail": "django.contrib.auth.backends",
        "documentation": {}
    },
    {
        "label": "Concat",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "Concat",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "Concat",
        "importPath": "django.db.models.functions",
        "description": "django.db.models.functions",
        "isExtraImport": true,
        "detail": "django.db.models.functions",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Case",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "When",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "IntegerField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "F",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Value",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "wraps",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "redirect_by_role",
        "importPath": "apps.components.role_redirect ",
        "description": "apps.components.role_redirect ",
        "isExtraImport": true,
        "detail": "apps.components.role_redirect ",
        "documentation": {}
    },
    {
        "label": "redirect_by_role",
        "importPath": "apps.components.role_redirect ",
        "description": "apps.components.role_redirect ",
        "isExtraImport": true,
        "detail": "apps.components.role_redirect ",
        "documentation": {}
    },
    {
        "label": "redirect_by_role2",
        "importPath": "apps.components.role_redirect ",
        "description": "apps.components.role_redirect ",
        "isExtraImport": true,
        "detail": "apps.components.role_redirect ",
        "documentation": {}
    },
    {
        "label": "EmailMessage",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "strip_tags",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "qrcode",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "qrcode",
        "description": "qrcode",
        "detail": "qrcode",
        "documentation": {}
    },
    {
        "label": "b64encode",
        "importPath": "base64",
        "description": "base64",
        "isExtraImport": true,
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "pytz",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytz",
        "description": "pytz",
        "detail": "pytz",
        "documentation": {}
    },
    {
        "label": "PasswordChangeForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "validate_password_format",
        "importPath": "apps.components.validators",
        "description": "apps.components.validators",
        "isExtraImport": true,
        "detail": "apps.components.validators",
        "documentation": {}
    },
    {
        "label": "ModelForm",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageDraw",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageFont",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "canvas",
        "importPath": "reportlab.pdfgen",
        "description": "reportlab.pdfgen",
        "isExtraImport": true,
        "detail": "reportlab.pdfgen",
        "documentation": {}
    },
    {
        "label": "canvas",
        "importPath": "reportlab.pdfgen",
        "description": "reportlab.pdfgen",
        "isExtraImport": true,
        "detail": "reportlab.pdfgen",
        "documentation": {}
    },
    {
        "label": "letter",
        "importPath": "reportlab.lib.pagesizes",
        "description": "reportlab.lib.pagesizes",
        "isExtraImport": true,
        "detail": "reportlab.lib.pagesizes",
        "documentation": {}
    },
    {
        "label": "letter",
        "importPath": "reportlab.lib.pagesizes",
        "description": "reportlab.lib.pagesizes",
        "isExtraImport": true,
        "detail": "reportlab.lib.pagesizes",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "locale",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "locale",
        "description": "locale",
        "detail": "locale",
        "documentation": {}
    },
    {
        "label": "ImageReader",
        "importPath": "reportlab.lib.utils",
        "description": "reportlab.lib.utils",
        "isExtraImport": true,
        "detail": "reportlab.lib.utils",
        "documentation": {}
    },
    {
        "label": "PCMYKColor",
        "importPath": "reportlab.lib.colors",
        "description": "reportlab.lib.colors",
        "isExtraImport": true,
        "detail": "reportlab.lib.colors",
        "documentation": {}
    },
    {
        "label": "PCMYKColorSep",
        "importPath": "reportlab.lib.colors",
        "description": "reportlab.lib.colors",
        "isExtraImport": true,
        "detail": "reportlab.lib.colors",
        "documentation": {}
    },
    {
        "label": "Color",
        "importPath": "reportlab.lib.colors",
        "description": "reportlab.lib.colors",
        "isExtraImport": true,
        "detail": "reportlab.lib.colors",
        "documentation": {}
    },
    {
        "label": "black",
        "importPath": "reportlab.lib.colors",
        "description": "reportlab.lib.colors",
        "isExtraImport": true,
        "detail": "reportlab.lib.colors",
        "documentation": {}
    },
    {
        "label": "lightblue",
        "importPath": "reportlab.lib.colors",
        "description": "reportlab.lib.colors",
        "isExtraImport": true,
        "detail": "reportlab.lib.colors",
        "documentation": {}
    },
    {
        "label": "red",
        "importPath": "reportlab.lib.colors",
        "description": "reportlab.lib.colors",
        "isExtraImport": true,
        "detail": "reportlab.lib.colors",
        "documentation": {}
    },
    {
        "label": "imgkit",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "imgkit",
        "description": "imgkit",
        "detail": "imgkit",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DetailView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "ListView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "datos_empleado2",
        "importPath": "apps.components.dataemployees",
        "description": "apps.components.dataemployees",
        "isExtraImport": true,
        "detail": "apps.components.dataemployees",
        "documentation": {}
    },
    {
        "label": "datos_empleado2",
        "importPath": "apps.components.dataemployees",
        "description": "apps.components.dataemployees",
        "isExtraImport": true,
        "detail": "apps.components.dataemployees",
        "documentation": {}
    },
    {
        "label": "EditEmployeesForm",
        "importPath": "apps.employees.forms.edit_employees_form",
        "description": "apps.employees.forms.edit_employees_form",
        "isExtraImport": true,
        "detail": "apps.employees.forms.edit_employees_form",
        "documentation": {}
    },
    {
        "label": "datos_cliente",
        "importPath": "employees.context_global",
        "description": "employees.context_global",
        "isExtraImport": true,
        "detail": "employees.context_global",
        "documentation": {}
    },
    {
        "label": "datos_empleado",
        "importPath": "employees.context_global",
        "description": "employees.context_global",
        "isExtraImport": true,
        "detail": "employees.context_global",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "importPath": "companies.models",
        "description": "companies.models",
        "isExtraImport": true,
        "detail": "companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "importPath": "companies.models",
        "description": "companies.models",
        "isExtraImport": true,
        "detail": "companies.models",
        "documentation": {}
    },
    {
        "label": "CustomPasswordChangeForm",
        "importPath": "apps.employees.forms.newpasswordform",
        "description": "apps.employees.forms.newpasswordform",
        "isExtraImport": true,
        "detail": "apps.employees.forms.newpasswordform",
        "documentation": {}
    },
    {
        "label": "update_session_auth_hash",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "EmpVacacionesForm",
        "importPath": "apps.employees.forms.vacation_request_form",
        "description": "apps.employees.forms.vacation_request_form",
        "isExtraImport": true,
        "detail": "apps.employees.forms.vacation_request_form",
        "documentation": {}
    },
    {
        "label": "calcular_dias_360",
        "importPath": "apps.components.utils",
        "description": "apps.components.utils",
        "isExtraImport": true,
        "detail": "apps.components.utils",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "certificaciones_laborales",
        "importPath": "apps.employees.views",
        "description": "apps.employees.views",
        "isExtraImport": true,
        "detail": "apps.employees.views",
        "documentation": {}
    },
    {
        "label": "index",
        "importPath": "apps.employees.views",
        "description": "apps.employees.views",
        "isExtraImport": true,
        "detail": "apps.employees.views",
        "documentation": {}
    },
    {
        "label": "edituser",
        "importPath": "apps.employees.views",
        "description": "apps.employees.views",
        "isExtraImport": true,
        "detail": "apps.employees.views",
        "documentation": {}
    },
    {
        "label": "comprobantes_nomina",
        "importPath": "apps.employees.views",
        "description": "apps.employees.views",
        "isExtraImport": true,
        "detail": "apps.employees.views",
        "documentation": {}
    },
    {
        "label": "newpassword",
        "importPath": "apps.employees.views",
        "description": "apps.employees.views",
        "isExtraImport": true,
        "detail": "apps.employees.views",
        "documentation": {}
    },
    {
        "label": "VacationList",
        "importPath": "apps.employees.views.vacation_history",
        "description": "apps.employees.views.vacation_history",
        "isExtraImport": true,
        "detail": "apps.employees.views.vacation_history",
        "documentation": {}
    },
    {
        "label": "vacation_request_function",
        "importPath": "apps.employees.views.vacation_request",
        "description": "apps.employees.views.vacation_request",
        "isExtraImport": true,
        "detail": "apps.employees.views.vacation_request",
        "documentation": {}
    },
    {
        "label": "ListaConceptosNomina",
        "importPath": "apps.employees.views.comprobantes_nomina",
        "description": "apps.employees.views.comprobantes_nomina",
        "isExtraImport": true,
        "detail": "apps.employees.views.comprobantes_nomina",
        "documentation": {}
    },
    {
        "label": "ListaNominas",
        "importPath": "apps.employees.views.comprobantes_nomina",
        "description": "apps.employees.views.comprobantes_nomina",
        "isExtraImport": true,
        "detail": "apps.employees.views.comprobantes_nomina",
        "documentation": {}
    },
    {
        "label": "genera_comprobante",
        "importPath": "apps.employees.views.comprobantes_nomina",
        "description": "apps.employees.views.comprobantes_nomina",
        "isExtraImport": true,
        "detail": "apps.employees.views.comprobantes_nomina",
        "documentation": {}
    },
    {
        "label": "listaNomina",
        "importPath": "apps.employees.views.comprobantes_nomina",
        "description": "apps.employees.views.comprobantes_nomina",
        "isExtraImport": true,
        "detail": "apps.employees.views.comprobantes_nomina",
        "documentation": {}
    },
    {
        "label": "viewdian",
        "importPath": "apps.employees.views.viewdian",
        "description": "apps.employees.views.viewdian",
        "isExtraImport": true,
        "detail": "apps.employees.views.viewdian",
        "documentation": {}
    },
    {
        "label": "elimiar",
        "importPath": "apps.employees.views.viewdian",
        "description": "apps.employees.views.viewdian",
        "isExtraImport": true,
        "detail": "apps.employees.views.viewdian",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "MiddlewareMixin",
        "importPath": "django.utils.deprecation",
        "description": "django.utils.deprecation",
        "isExtraImport": true,
        "detail": "django.utils.deprecation",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "threading",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "threading",
        "description": "threading",
        "detail": "threading",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "secrets",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "secrets",
        "description": "secrets",
        "detail": "secrets",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "Session",
        "importPath": "boto3.session",
        "description": "boto3.session",
        "isExtraImport": true,
        "detail": "boto3.session",
        "documentation": {}
    },
    {
        "label": "custom_400",
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "isExtraImport": true,
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "custom_403",
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "isExtraImport": true,
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "custom_404",
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "isExtraImport": true,
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "custom_500",
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "isExtraImport": true,
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": {
            "name": "",
            "kind": 6,
            "peekOfCode": "class  CompaniesForm(forms.Form):\n    name = forms.CharField(label='Nombre')\n    description = forms.CharField(label='Descripción',required=False)\n    db_name = forms.CharField(label='Nombre de la base de datos')\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.form_method = 'post'\n        self.helper.layout = Layout(\n            Row("
        },
        "kind": 6,
        "importPath": "apps.administrator.forms.companiesForm",
        "description": "apps.administrator.forms.companiesForm",
        "peekOfCode": "class  CompaniesForm(forms.Form):\n    name = forms.CharField(label='Nombre')\n    description = forms.CharField(label='Descripción',required=False)\n    db_name = forms.CharField(label='Nombre de la base de datos')\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.form_method = 'post'\n        self.helper.layout = Layout(\n            Row(",
        "detail": "apps.administrator.forms.companiesForm",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "kind": 6,
        "importPath": "apps.administrator.forms.createuserForm",
        "description": "apps.administrator.forms.createuserForm",
        "peekOfCode": "class UserCreationForm(forms.Form):\n    password1 = forms.CharField(label='Password', widget=forms.PasswordInput, help_text='Su contraseña no puede ser demasiado similar a su otra información personal.')\n    password2 = forms.CharField(label='Password confirmation', widget=forms.PasswordInput, help_text='Ingrese la misma contraseña que antes, para verificación.')\n    def clean(self):\n        cleaned_data = super().clean()\n        username = cleaned_data.get('username')\n        email = cleaned_data.get('email')\n        password1 = cleaned_data.get('password1')\n        password2 = cleaned_data.get('password2')\n        if User.objects.filter(username=username).exists():",
        "detail": "apps.administrator.forms.createuserForm",
        "documentation": {}
    },
    {
        "label": "ROLES",
        "kind": 5,
        "importPath": "apps.administrator.forms.createuserForm",
        "description": "apps.administrator.forms.createuserForm",
        "peekOfCode": "ROLES = (\n        ('administrator', 'Administrator'),\n        ('employee', 'Employee'),\n        ('accountant', 'Accountant'),\n        ('entrepreneur', 'Entrepreneur'),\n    )\nclass UserCreationForm(forms.Form):\n    password1 = forms.CharField(label='Password', widget=forms.PasswordInput, help_text='Su contraseña no puede ser demasiado similar a su otra información personal.')\n    password2 = forms.CharField(label='Password confirmation', widget=forms.PasswordInput, help_text='Ingrese la misma contraseña que antes, para verificación.')\n    def clean(self):",
        "detail": "apps.administrator.forms.createuserForm",
        "documentation": {}
    },
    {
        "label": {
            "name": "",
            "kind": 6,
            "peekOfCode": "class  RolesForm(forms.Form):\n    tipo = forms.CharField(label='Tipo de Rol')\n    nombre = forms.CharField(label='Nombre Rol')\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.form_method = 'post'\n        self.helper.layout = Layout(\n            Row(\n                Column('tipo', css_class='form-group col-md-6 mb-0'),"
        },
        "kind": 6,
        "importPath": "apps.administrator.forms.rolesForm",
        "description": "apps.administrator.forms.rolesForm",
        "peekOfCode": "class  RolesForm(forms.Form):\n    tipo = forms.CharField(label='Tipo de Rol')\n    nombre = forms.CharField(label='Nombre Rol')\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.form_method = 'post'\n        self.helper.layout = Layout(\n            Row(\n                Column('tipo', css_class='form-group col-md-6 mb-0'),",
        "detail": "apps.administrator.forms.rolesForm",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.administrator.migrations.0001_initial",
        "description": "apps.administrator.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Roles',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('role_key', models.CharField(max_length=20)),",
        "detail": "apps.administrator.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "createcompanies_admin",
        "kind": 2,
        "importPath": "apps.administrator.views.Createcompanies.createcompanies",
        "description": "apps.administrator.views.Createcompanies.createcompanies",
        "peekOfCode": "def createcompanies_admin(request):\n    if request.method == 'POST':\n        form = CompaniesForm(request.POST)\n        if form.is_valid():\n            Empresa.objects.create(\n                name=form.cleaned_data['name'],\n                description=form.cleaned_data['description'],\n                db_name=form.cleaned_data['db_name']\n            )\n            messages.success(request, 'La empresa Fue creada Correctamente')",
        "detail": "apps.administrator.views.Createcompanies.createcompanies",
        "documentation": {}
    },
    {
        "label": "toggle_user_active_status",
        "kind": 2,
        "importPath": "apps.administrator.views.Createuser.createuser",
        "description": "apps.administrator.views.Createuser.createuser",
        "peekOfCode": "def toggle_user_active_status(request, user_id, activate=True):\n    usuario = get_object_or_404(Usuario, id=user_id)\n    usuario.user.is_active = activate\n    usuario.user.save()\n    status_message = 'activado' if activate else 'desactivado'\n    messages.success(request, f'El usuario ha sido {status_message} con éxito.')\n    return redirect('admin:user')\ndef user_admin(request):\n    users = Usuario.objects.all()\n    return render(request, './admin/users.html' , {'users':users}) ",
        "detail": "apps.administrator.views.Createuser.createuser",
        "documentation": {}
    },
    {
        "label": "user_admin",
        "kind": 2,
        "importPath": "apps.administrator.views.Createuser.createuser",
        "description": "apps.administrator.views.Createuser.createuser",
        "peekOfCode": "def user_admin(request):\n    users = Usuario.objects.all()\n    return render(request, './admin/users.html' , {'users':users}) \ndef usercreate_admin(request):\n    if request.method == 'POST':\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            username = form.cleaned_data['username']\n            first_name = form.cleaned_data['first_name']\n            last_name = form.cleaned_data['last_name']",
        "detail": "apps.administrator.views.Createuser.createuser",
        "documentation": {}
    },
    {
        "label": "usercreate_admin",
        "kind": 2,
        "importPath": "apps.administrator.views.Createuser.createuser",
        "description": "apps.administrator.views.Createuser.createuser",
        "peekOfCode": "def usercreate_admin(request):\n    if request.method == 'POST':\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            username = form.cleaned_data['username']\n            first_name = form.cleaned_data['first_name']\n            last_name = form.cleaned_data['last_name']\n            email = form.cleaned_data['email']\n            password = form.cleaned_data['password1']\n            is_staff = form.cleaned_data['is_staff']",
        "detail": "apps.administrator.views.Createuser.createuser",
        "documentation": {}
    },
    {
        "label": "index_admin",
        "kind": 2,
        "importPath": "apps.administrator.views.index.index",
        "description": "apps.administrator.views.index.index",
        "peekOfCode": "def index_admin(request):\n    # email_type = 'welcome' \n    # name = 'nada'  \n    # context = {'name': name}  \n    # subject = 'Asunto del correo'  \n    # recipient_list = ['mikepruebas@yopmail.com','manuel.david.13.b@gmail.com']\n    # if send_template_email(email_type, context, subject, recipient_list):\n    #     print('Correo enviado correctamente')\n    # else:\n    #     print('Error al enviar el correo')",
        "detail": "apps.administrator.views.index.index",
        "documentation": {}
    },
    {
        "label": "generate_random_password",
        "kind": 2,
        "importPath": "apps.administrator.views.loginweb.loginweb",
        "description": "apps.administrator.views.loginweb.loginweb",
        "peekOfCode": "def generate_random_password(length=12):\n    characters = string.ascii_letters + string.digits + string.punctuation\n    return ''.join(random.choice(characters) for i in range(length))\ndef create_user_and_usuario(email, pnombre, papellido, password, empresa, id_empleado):\n    try:\n        user = User.objects.create(\n            username=email,\n            first_name=pnombre,\n            last_name=papellido,\n            email=email,",
        "detail": "apps.administrator.views.loginweb.loginweb",
        "documentation": {}
    },
    {
        "label": "create_user_and_usuario",
        "kind": 2,
        "importPath": "apps.administrator.views.loginweb.loginweb",
        "description": "apps.administrator.views.loginweb.loginweb",
        "peekOfCode": "def create_user_and_usuario(email, pnombre, papellido, password, empresa, id_empleado):\n    try:\n        user = User.objects.create(\n            username=email,\n            first_name=pnombre,\n            last_name=papellido,\n            email=email,\n            password=password,\n            is_staff=False,\n            is_superuser=False,",
        "detail": "apps.administrator.views.loginweb.loginweb",
        "documentation": {}
    },
    {
        "label": "loginweb_admin",
        "kind": 2,
        "importPath": "apps.administrator.views.loginweb.loginweb",
        "description": "apps.administrator.views.loginweb.loginweb",
        "peekOfCode": "def loginweb_admin(request,empresa='default'):\n    if request.method == 'POST':\n        selected_ids = request.POST.getlist('selected_ids')\n        if selected_ids:\n            for selected in selected_ids:\n                print(selected)\n                try:\n                    usertempo = Contratosemp.objects.using(empresa).get(idempleado = int(selected))\n                    usuario = Usuario.objects.get(id_empleado = int(selected))\n                except Contratosemp.DoesNotExist:",
        "detail": "apps.administrator.views.loginweb.loginweb",
        "documentation": {}
    },
    {
        "label": "select_loginweb_admin",
        "kind": 2,
        "importPath": "apps.administrator.views.loginweb.loginweb",
        "description": "apps.administrator.views.loginweb.loginweb",
        "peekOfCode": "def select_loginweb_admin(request):\n    if request.method == 'POST':\n        empresa = request.POST.get('empresa_select')\n        return redirect('admin:loginweb', empresa)\n    empresas = Empresa.objects.exclude(name='admin')\n    return render(request, './admin/selectloginweb.html', {'empresas': empresas})\ndef edit_main(request, empresa):\n    if request.method == 'POST':\n        correo1 = request.POST.get('correo1')\n        correo2 = request.POST.get('correo2')",
        "detail": "apps.administrator.views.loginweb.loginweb",
        "documentation": {}
    },
    {
        "label": "edit_main",
        "kind": 2,
        "importPath": "apps.administrator.views.loginweb.loginweb",
        "description": "apps.administrator.views.loginweb.loginweb",
        "peekOfCode": "def edit_main(request, empresa):\n    if request.method == 'POST':\n        correo1 = request.POST.get('correo1')\n        correo2 = request.POST.get('correo2')\n        try:\n            usertempo = Contratosemp.objects.using(empresa).get(email=correo2)\n        except Contratosemp.DoesNotExist:\n            messages.error(request, 'No se encontró empleado con el correo electrónico proporcionado.')\n            return redirect('admin:loginweb', empresa=empresa)\n        try:",
        "detail": "apps.administrator.views.loginweb.loginweb",
        "documentation": {}
    },
    {
        "label": "role_admin",
        "kind": 2,
        "importPath": "apps.administrator.views.role.role",
        "description": "apps.administrator.views.role.role",
        "peekOfCode": "def role_admin(request):\n    if request.method == 'POST':\n        form = RolesForm(request.POST)\n        if form.is_valid():\n            nombre = form.cleaned_data['nombre'].capitalize()\n            Roles.objects.create(\n                role_key=form.cleaned_data['tipo'],\n                role_label=nombre\n            )\n            messages.success(request, 'El Rol Fue creado Correctamente')",
        "detail": "apps.administrator.views.role.role",
        "documentation": {}
    },
    {
        "label": "AdministratorConfig",
        "kind": 6,
        "importPath": "apps.administrator.appsadministrator",
        "description": "apps.administrator.appsadministrator",
        "peekOfCode": "class AdministratorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'administrator'",
        "detail": "apps.administrator.appsadministrator",
        "documentation": {}
    },
    {
        "label": "Roles",
        "kind": 6,
        "importPath": "apps.administrator.models",
        "description": "apps.administrator.models",
        "peekOfCode": "class Roles(models.Model):\n    role_key = models.CharField(max_length=20)\n    role_label = models.CharField(max_length=50)\n    class Meta:\n        managed = False\n        db_table = 'rolechoices'",
        "detail": "apps.administrator.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.administrator.urls",
        "description": "apps.administrator.urls",
        "peekOfCode": "urlpatterns = [\n    path('', index.index_admin, name='admin'),\n    path('users/', createuser.user_admin, name='user'),\n    path('users/create/', createuser.usercreate_admin, name='usercreate'),\n    path('users/activate/<int:user_id>/', createuser.toggle_user_active_status, {'activate': True}, name='useractivate'),\n    path('users/deactivate/<int:user_id>/', createuser.toggle_user_active_status, {'activate': False}, name='userdeactivate'),\n    path('companies/', createcompanies.createcompanies_admin, name='companies'),\n    path('role/', role.role_admin, name='role'),\n    path('loginweb/select/<str:empresa>/', loginweb.loginweb_admin, name='loginweb'),\n    path('loginweb/select/',loginweb.select_loginweb_admin , name='logiwebselect'),",
        "detail": "apps.administrator.urls",
        "documentation": {}
    },
    {
        "label": "AbstractConceptForm",
        "kind": 6,
        "importPath": "apps.companies.forms.AbstractConceptForm",
        "description": "apps.companies.forms.AbstractConceptForm",
        "peekOfCode": "class AbstractConceptForm(forms.Form):\n    sconcept = forms.ChoiceField(choices=CONCEPT_CHOICES, label='Concepto' , required=False,widget=forms.Select(attrs={'data-control': 'select2'}))\n    payroll = forms.ChoiceField(choices=EMPLOYEE_CHOICES, label='Nómina' , required=False,widget=forms.Select(attrs={'data-control': 'select2'}))\n    employee = forms.ChoiceField(choices=EMPLOYEE_CHOICES, label='Empleado' , required=False,widget=forms.Select(attrs={'data-control': 'select2'}))\n    month = forms.ChoiceField(choices=MONTH_CHOICES, label='Mes Acumular' , required=False)\n    year = forms.ChoiceField(choices=YEAR_CHOICES, label='Año Acumular' , required=False)\n    def clean(self):\n        cleaned_data = super().clean()\n        filled_fields_count = sum(1 for field in self.fields if cleaned_data.get(field))\n        if filled_fields_count < 2:",
        "detail": "apps.companies.forms.AbstractConceptForm",
        "documentation": {}
    },
    {
        "label": "CONCEPT_CHOICES",
        "kind": 5,
        "importPath": "apps.companies.forms.AbstractConceptForm",
        "description": "apps.companies.forms.AbstractConceptForm",
        "peekOfCode": "CONCEPT_CHOICES = [\n        ('', '---------------'),\n        ('1', 'Concepto 1'),\n        ('2', 'Concepto 2'),\n        ('3', 'Concepto 3'),\n        # Agrega más opciones según sea necesario\n    ]\nMONTH_CHOICES = [\n    ('', '---------------'),\n    ('ENERO', 'Enero'),",
        "detail": "apps.companies.forms.AbstractConceptForm",
        "documentation": {}
    },
    {
        "label": "MONTH_CHOICES",
        "kind": 5,
        "importPath": "apps.companies.forms.AbstractConceptForm",
        "description": "apps.companies.forms.AbstractConceptForm",
        "peekOfCode": "MONTH_CHOICES = [\n    ('', '---------------'),\n    ('ENERO', 'Enero'),\n    ('FEBRERO', 'Febrero'),\n    ('MARZO', 'Marzo'),\n    ('ABRIL', 'Abril'),\n    ('MAYO', 'Mayo'),\n    ('JUNIO', 'Junio'),\n    ('JULIO', 'Julio'),\n    ('AGOSTO', 'Agosto'),",
        "detail": "apps.companies.forms.AbstractConceptForm",
        "documentation": {}
    },
    {
        "label": "YEAR_CHOICES",
        "kind": 5,
        "importPath": "apps.companies.forms.AbstractConceptForm",
        "description": "apps.companies.forms.AbstractConceptForm",
        "peekOfCode": "YEAR_CHOICES = [\n    ('', '---------------'),\n    ('2023', '2023'),\n    ('2024', '2024'),\n    ('2025', '2025'),\n    # Agrega más opciones según sea necesario\n]\nEMPLOYEE_CHOICES = [\n    ('', '---------------'),\n    ('1', 'Pilar Castañeda'),",
        "detail": "apps.companies.forms.AbstractConceptForm",
        "documentation": {}
    },
    {
        "label": "EMPLOYEE_CHOICES",
        "kind": 5,
        "importPath": "apps.companies.forms.AbstractConceptForm",
        "description": "apps.companies.forms.AbstractConceptForm",
        "peekOfCode": "EMPLOYEE_CHOICES = [\n    ('', '---------------'),\n    ('1', 'Pilar Castañeda'),\n    ('2', 'Iván Paez')\n]\nCOST_CENTER_CHOICES = [\n    ('', '---------------'),\n    ('1', 'Centro de Costos 1'),\n    ('2', 'Centro de Costos 2')\n]",
        "detail": "apps.companies.forms.AbstractConceptForm",
        "documentation": {}
    },
    {
        "label": "COST_CENTER_CHOICES",
        "kind": 5,
        "importPath": "apps.companies.forms.AbstractConceptForm",
        "description": "apps.companies.forms.AbstractConceptForm",
        "peekOfCode": "COST_CENTER_CHOICES = [\n    ('', '---------------'),\n    ('1', 'Centro de Costos 1'),\n    ('2', 'Centro de Costos 2')\n]\nclass AbstractConceptForm(forms.Form):\n    sconcept = forms.ChoiceField(choices=CONCEPT_CHOICES, label='Concepto' , required=False,widget=forms.Select(attrs={'data-control': 'select2'}))\n    payroll = forms.ChoiceField(choices=EMPLOYEE_CHOICES, label='Nómina' , required=False,widget=forms.Select(attrs={'data-control': 'select2'}))\n    employee = forms.ChoiceField(choices=EMPLOYEE_CHOICES, label='Empleado' , required=False,widget=forms.Select(attrs={'data-control': 'select2'}))\n    month = forms.ChoiceField(choices=MONTH_CHOICES, label='Mes Acumular' , required=False)",
        "detail": "apps.companies.forms.AbstractConceptForm",
        "documentation": {}
    },
    {
        "label": "ContractForm",
        "kind": 6,
        "importPath": "apps.companies.forms.ContractForm",
        "description": "apps.companies.forms.ContractForm",
        "peekOfCode": "class ContractForm(forms.Form):\n    def clean(self):\n        cleaned_data = super().clean()\n        payrollAccount = cleaned_data.get('payrollAccount')\n        if payrollAccount:\n            try:\n                float(payrollAccount)\n            except ValueError:\n                self.add_error('payrollAccount', 'El salario debe ser un número válido (entero o flotante).')\n        return cleaned_data",
        "detail": "apps.companies.forms.ContractForm",
        "documentation": {}
    },
    {
        "label": "ModalidadSalario",
        "kind": 5,
        "importPath": "apps.companies.forms.ContractForm",
        "description": "apps.companies.forms.ContractForm",
        "peekOfCode": "ModalidadSalario = (\n    ('', '----------'),\n    ('1', 'Variable'),\n    ('2', 'Fijo'),\n    ('3', 'Mixto'),\n)\nFormaPago = (\n    ('', '----------'),\n    ('1', 'Abono a cuenta'),\n    ('2', 'Cheque'),",
        "detail": "apps.companies.forms.ContractForm",
        "documentation": {}
    },
    {
        "label": "FormaPago",
        "kind": 5,
        "importPath": "apps.companies.forms.ContractForm",
        "description": "apps.companies.forms.ContractForm",
        "peekOfCode": "FormaPago = (\n    ('', '----------'),\n    ('1', 'Abono a cuenta'),\n    ('2', 'Cheque'),\n    ('3', 'Efectivo'),\n)\nTipoCcuenta = [\n    ('', '----------'),\n    ('ahorros', 'Ahorros'),\n    ('corriente', 'Corriente'),",
        "detail": "apps.companies.forms.ContractForm",
        "documentation": {}
    },
    {
        "label": "TipoCcuenta",
        "kind": 5,
        "importPath": "apps.companies.forms.ContractForm",
        "description": "apps.companies.forms.ContractForm",
        "peekOfCode": "TipoCcuenta = [\n    ('', '----------'),\n    ('ahorros', 'Ahorros'),\n    ('corriente', 'Corriente'),\n]\n#forms.ChoiceField(choices=[('', '----------')] + [(documento.codigo, documento.documento) for documento in Tipodocumento.objects.all()], label='Tipo de documento de identidad ')\nclass ContractForm(forms.Form):\n    def clean(self):\n        cleaned_data = super().clean()\n        payrollAccount = cleaned_data.get('payrollAccount')",
        "detail": "apps.companies.forms.ContractForm",
        "documentation": {}
    },
    {
        "label": "CostcenterForm",
        "kind": 6,
        "importPath": "apps.companies.forms.CostcenterForm",
        "description": "apps.companies.forms.CostcenterForm",
        "peekOfCode": "class CostcenterForm(forms.Form):\n    nomcosto = forms.CharField(label='Nombre de Costo' , required=True ,widget=forms.TextInput(attrs={'placeholder': 'nombre de costo'}))\n    suficosto = forms.CharField(label='Sufijo costo' , required=False ,widget=forms.TextInput(attrs={'placeholder': 'Sufijo costo'}))\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.fields['grupocontable'] = forms.ChoiceField(choices=[('', '----------')] + [(nomina.idgrupo, nomina.grupocontable) for nomina in Contabgrupos.objects.all()], label='Grupo Contable' , required=True)\n        self.helper = FormHelper()\n        self.helper.layout = Layout(\n            Row(\n                Column('nomcosto', css_class='form-group mb-0'),",
        "detail": "apps.companies.forms.CostcenterForm",
        "documentation": {}
    },
    {
        "label": "EmployeeForm",
        "kind": 6,
        "importPath": "apps.companies.forms.EmployeeForm",
        "description": "apps.companies.forms.EmployeeForm",
        "peekOfCode": "class EmployeeForm(forms.Form):\n    def clean(self):\n        cleaned_data = super().clean()\n        first_name = cleaned_data.get('first_name')\n        second_name = cleaned_data.get('second_name', '')\n        first_last_name = cleaned_data.get('first_last_name')\n        second_last_name = cleaned_data.get('second_last_name', '')\n        height = cleaned_data.get('height')\n        weight = cleaned_data.get('weight')\n        identification_number = cleaned_data.get('identification_number')",
        "detail": "apps.companies.forms.EmployeeForm",
        "documentation": {}
    },
    {
        "label": "ReportFilterForm",
        "kind": 6,
        "importPath": "apps.companies.forms.ReportFilterForm",
        "description": "apps.companies.forms.ReportFilterForm",
        "peekOfCode": "class ReportFilterForm(forms.Form):\n    start_date = forms.DateField(\n        required=False,\n        label='Fecha Inicial',\n        widget=forms.DateInput(attrs={'type': 'date'})\n    )\n    end_date = forms.DateField(\n        required=False,\n        label='Fecha Final',\n        widget=forms.DateInput(attrs={'type': 'date'})",
        "detail": "apps.companies.forms.ReportFilterForm",
        "documentation": {}
    },
    {
        "label": "chargesForm",
        "kind": 6,
        "importPath": "apps.companies.forms.chargesForm",
        "description": "apps.companies.forms.chargesForm",
        "peekOfCode": "class chargesForm(forms.Form):\n    nombrecargo = forms.CharField(widget=forms.TextInput(attrs={'placeholder': 'Nombre cargo'}))\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.layout = Layout(\n            Row(\n                Column('nombrecargo', css_class='form-group mb-0'),\n                css_class='row'\n            ),",
        "detail": "apps.companies.forms.chargesForm",
        "documentation": {}
    },
    {
        "label": "headquartersForm",
        "kind": 6,
        "importPath": "apps.companies.forms.headquartersForm",
        "description": "apps.companies.forms.headquartersForm",
        "peekOfCode": "class headquartersForm(forms.Form):\n    nombresede = forms.CharField(label='Nombre de la Sede' , required=True ,widget=forms.TextInput(attrs={'placeholder': 'Nombre de la Sede'}))\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        self.fields['cajacompensacion'] = forms.ChoiceField(choices=[('', '----------')] + [(entidad.codigo, entidad.entidad) for entidad in Entidadessegsocial.objects.filter(tipoentidad='CCF').order_by('entidad')], label='Caja de Compensación Familiar' , required=True , widget=forms.Select(attrs={'data-control': 'select2'}) )\n        self.helper = FormHelper()\n        self.helper.layout = Layout(\n            Row(\n                Column('nombresede', css_class='form-group mb-0'),\n                Column('cajacompensacion', css_class='form-group mb-0'),",
        "detail": "apps.companies.forms.headquartersForm",
        "documentation": {}
    },
    {
        "label": "AddressForm",
        "kind": 6,
        "importPath": "apps.companies.forms.prueba",
        "description": "apps.companies.forms.prueba",
        "peekOfCode": "class AddressForm(forms.Form):\n    email = forms.CharField(widget=forms.TextInput(attrs={'placeholder': 'Email'}))\n    password = forms.CharField(widget=forms.PasswordInput())\n    address_1 = forms.CharField(\n        label='Address',\n        widget=forms.TextInput(attrs={'placeholder': '1234 Main St'})\n    )\n    address_2 = forms.CharField(\n        widget=forms.TextInput(attrs={'placeholder': 'Apartment, studio, or floor'})\n    )",
        "detail": "apps.companies.forms.prueba",
        "documentation": {}
    },
    {
        "label": "STATES",
        "kind": 5,
        "importPath": "apps.companies.forms.prueba",
        "description": "apps.companies.forms.prueba",
        "peekOfCode": "STATES = (\n    ('', 'Choose...'),\n    ('MG', 'Minas Gerais'),\n    ('SP', 'Sao Paulo'),\n    ('RJ', 'Rio de Janeiro')\n)\nclass AddressForm(forms.Form):\n    email = forms.CharField(widget=forms.TextInput(attrs={'placeholder': 'Email'}))\n    password = forms.CharField(widget=forms.PasswordInput())\n    address_1 = forms.CharField(",
        "detail": "apps.companies.forms.prueba",
        "documentation": {}
    },
    {
        "label": "workplaceForm",
        "kind": 6,
        "importPath": "apps.companies.forms.workplaceForm",
        "description": "apps.companies.forms.workplaceForm",
        "peekOfCode": "class workplaceForm(forms.Form):\n    TARIFA_CHOICES = [\n        ('', '---------'),\n        ('0.522', 'Riesgo I - 0.522'),\n        ('1.044', 'Riesgo II - 1.044'),\n        ('2.436', 'Riesgo III - 2.436'),\n        ('4.350', 'Riesgo IV - 4.350'),\n        ('6.960', 'Riesgo V - 6.960'),\n    ]\n    nombrecentrotrabajo = forms.CharField(label='Nombre de Costo' , required=True ,widget=forms.TextInput(attrs={'placeholder': 'nombre de centro trabajo'}))",
        "detail": "apps.companies.forms.workplaceForm",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.companies.migrations.0001_initial",
        "description": "apps.companies.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Centrotrabajo',\n            fields=[\n                ('nombrecentrotrabajo', models.CharField(blank=True, max_length=30, null=True)),\n                ('tarifaarl', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),",
        "detail": "apps.companies.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.companies.migrations.0002_bancos_cargos_ciudades_entidadessegsocial_paises_and_more",
        "description": "apps.companies.migrations.0002_bancos_cargos_ciudades_entidadessegsocial_paises_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('companies', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Bancos',\n            fields=[\n                ('idbanco', models.IntegerField(primary_key=True, serialize=False)),\n                ('nombanco', models.CharField(blank=True, max_length=255, null=True)),",
        "detail": "apps.companies.migrations.0002_bancos_cargos_ciudades_entidadessegsocial_paises_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.companies.migrations.0003_conceptosdenomina_contabgrupos_crearnomina_nomina",
        "description": "apps.companies.migrations.0003_conceptosdenomina_contabgrupos_crearnomina_nomina",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('companies', '0002_bancos_cargos_ciudades_entidadessegsocial_paises_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Conceptosdenomina',\n            fields=[\n                ('nombreconcepto', models.CharField(max_length=30)),\n                ('multiplicadorconcepto', models.DecimalField(decimal_places=2, max_digits=4)),",
        "detail": "apps.companies.migrations.0003_conceptosdenomina_contabgrupos_crearnomina_nomina",
        "documentation": {}
    },
    {
        "label": "startCompanies",
        "kind": 2,
        "importPath": "apps.companies.views.ContractsList.ContractsList",
        "description": "apps.companies.views.ContractsList.ContractsList",
        "peekOfCode": "def startCompanies(request): \n    contratos_empleados = Contratos.objects\\\n        .select_related('idempleado', 'idcosto', 'tipocontrato', 'idsede') \\\n        .filter(estadocontrato=1) \\\n        .values('idempleado__docidentidad', 'idempleado__papellido', 'idempleado__pnombre',\n                'idempleado__snombre', 'fechainiciocontrato', 'cargo', 'salario', 'idcosto__nomcosto',\n                'tipocontrato__tipocontrato', 'centrotrabajo__tarifaarl','idempleado__idempleado','idcontrato')\n    empleados = []\n    for contrato in contratos_empleados:\n        nombre_empleado = f\"{contrato['idempleado__papellido']} {contrato['idempleado__pnombre']} {contrato['idempleado__snombre']}\"",
        "detail": "apps.companies.views.ContractsList.ContractsList",
        "documentation": {}
    },
    {
        "label": "exportar_excel1",
        "kind": 2,
        "importPath": "apps.companies.views.ContractsList.ContractsList",
        "description": "apps.companies.views.ContractsList.ContractsList",
        "peekOfCode": "def exportar_excel1(request):\n    citys = Ciudades.objects.all()\n    contratos_empleados = Contratos.objects\\\n        .select_related(\n            'idempleado', \n            'idcosto', \n            'tipocontrato', \n            'idsede', \n            'centrotrabajo', \n            'ciudadcontratacion', ",
        "detail": "apps.companies.views.ContractsList.ContractsList",
        "documentation": {}
    },
    {
        "label": "exportar_excel2",
        "kind": 2,
        "importPath": "apps.companies.views.ContractsList.ContractsList",
        "description": "apps.companies.views.ContractsList.ContractsList",
        "peekOfCode": "def exportar_excel2(request):\n    citys = Ciudades.objects.all()\n    contratosemp_empleados = Contratosemp.objects.filter(estadocontrato=1).values_list(\n        'docidentidad', 'tipodocident', 'pnombre', 'snombre', 'papellido', 'sapellido', 'fechanac',\n        'ciudadnacimiento', 'telefonoempleado', 'direccionempleado', 'sexo', 'email', \n        'ciudadresidencia', 'estadocivil', 'idempleado', 'paisnacimiento', 'paisresidencia', \n        'celular', 'profesion', 'niveleducativo', 'gruposanguineo', 'estatura', 'peso', \n        'fechaexpedicion', 'ciudadexpedicion', 'dotpantalon', 'dotcamisa', 'dotzapatos', \n        'estrato', 'numlibretamil', 'estadocontrato', 'formatohv'\n    )",
        "detail": "apps.companies.views.ContractsList.ContractsList",
        "documentation": {}
    },
    {
        "label": "Costcenter",
        "kind": 2,
        "importPath": "apps.companies.views.Costcenter.Costcenter",
        "description": "apps.companies.views.Costcenter.Costcenter",
        "peekOfCode": "def Costcenter(request): \n    if request.method == 'POST':\n        form = CostcenterForm(request.POST)\n        if form.is_valid():\n            nuevo_costo = Costos(\n                nomcosto=form.cleaned_data['nomcosto'],\n                suficosto=form.cleaned_data['suficosto'],\n                grupocontable=form.cleaned_data['grupocontable']\n            )\n            nuevo_costo.save()",
        "detail": "apps.companies.views.Costcenter.Costcenter",
        "documentation": {}
    },
    {
        "label": "EditEmployeeVisual",
        "kind": 2,
        "importPath": "apps.companies.views.EditEmployee.EditEmployee",
        "description": "apps.companies.views.EditEmployee.EditEmployee",
        "peekOfCode": "def EditEmployeeVisual(request,idempleado):\n    empleado = Contratosemp.objects.get(idempleado=idempleado) \n    tipo_documento = Tipodocumento.objects.get(codigo=empleado.tipodocident) \n    ciudadex = Ciudades.objects.get(idciudad=empleado.ciudadexpedicion) \n    ciudadna = Ciudades.objects.get(idciudad=empleado.ciudadnacimiento) \n    campos_a_ajustar = [\n    'identification_type', 'identification_number', 'expedition_date', 'expedition_city', 'first_name',\n    'second_name', 'first_last_name', 'second_last_name', 'sex', 'birthdate', 'birth_city','birth_country','blood_group'\n    ]\n    DicContract = {",
        "detail": "apps.companies.views.EditEmployee.EditEmployee",
        "documentation": {}
    },
    {
        "label": "EditEmployeeSearch",
        "kind": 2,
        "importPath": "apps.companies.views.EditEmployee.EditEmployee",
        "description": "apps.companies.views.EditEmployee.EditEmployee",
        "peekOfCode": "def EditEmployeeSearch(request):\n    contratos_empleados = Contratos.objects \\\n        .select_related('idempleado', 'idcosto', 'tipocontrato', 'idsede') \\\n        .filter(estadocontrato=1) \\\n        .values('idempleado__docidentidad', 'idempleado__papellido', 'idempleado__sapellido','idempleado__pnombre',\n                'idempleado__snombre', 'fechainiciocontrato', 'cargo', 'idempleado__direccionempleado',\n                'ciudadcontratacion__ciudad','idempleado__celular','idempleado__email','idempleado__idempleado')\n    empleados = []\n    for contrato in contratos_empleados:\n        nombre_empleado = f\"{contrato['idempleado__papellido']} {contrato['idempleado__sapellido']}  {contrato['idempleado__pnombre']} {contrato['idempleado__snombre']}\"",
        "detail": "apps.companies.views.EditEmployee.EditEmployee",
        "documentation": {}
    },
    {
        "label": "abstractconcept",
        "kind": 2,
        "importPath": "apps.companies.views.abstractconcept.abstractconcept",
        "description": "apps.companies.views.abstractconcept.abstractconcept",
        "peekOfCode": "def abstractconcept(request):\n    if request.method == 'POST':\n        form = AbstractConceptForm(request.POST)\n        if form.is_valid():\n            # Obtener los datos del formulario\n            sconcept = form.cleaned_data.get('sconcept')\n            payroll = form.cleaned_data.get('payroll')\n            employee = form.cleaned_data.get('employee')\n            month = form.cleaned_data.get('month')\n            year = form.cleaned_data.get('year')",
        "detail": "apps.companies.views.abstractconcept.abstractconcept",
        "documentation": {}
    },
    {
        "label": "contractview",
        "kind": 2,
        "importPath": "apps.companies.views.assetsview.assetsview",
        "description": "apps.companies.views.assetsview.assetsview",
        "peekOfCode": "def contractview(request,idcontrato): \n    contrato = Contratos.objects.get(idcontrato = idcontrato)\n    return render(request, './companies/contractview.html',{'contrato': contrato })\ndef resumeview(request, idempleado):\n    empleado = Contratosemp.objects.get(idempleado=idempleado)\n    ciudadnacimiento = Ciudades.objects.get(idciudad=empleado.ciudadnacimiento) if empleado.ciudadnacimiento else None\n    ciudadexpedicion = Ciudades.objects.get(idciudad=empleado.ciudadexpedicion) if empleado.ciudadexpedicion else None\n    ciudadresidencia = Ciudades.objects.get(idciudad=empleado.ciudadresidencia) if empleado.ciudadresidencia else None\n    empleados = {\n        'docidentidad': empleado.docidentidad,",
        "detail": "apps.companies.views.assetsview.assetsview",
        "documentation": {}
    },
    {
        "label": "resumeview",
        "kind": 2,
        "importPath": "apps.companies.views.assetsview.assetsview",
        "description": "apps.companies.views.assetsview.assetsview",
        "peekOfCode": "def resumeview(request, idempleado):\n    empleado = Contratosemp.objects.get(idempleado=idempleado)\n    ciudadnacimiento = Ciudades.objects.get(idciudad=empleado.ciudadnacimiento) if empleado.ciudadnacimiento else None\n    ciudadexpedicion = Ciudades.objects.get(idciudad=empleado.ciudadexpedicion) if empleado.ciudadexpedicion else None\n    ciudadresidencia = Ciudades.objects.get(idciudad=empleado.ciudadresidencia) if empleado.ciudadresidencia else None\n    empleados = {\n        'docidentidad': empleado.docidentidad,\n        'tipodocident': empleado.tipodocident,\n        'pnombre': empleado.pnombre,\n        'snombre': empleado.snombre,",
        "detail": "apps.companies.views.assetsview.assetsview",
        "documentation": {}
    },
    {
        "label": "bank_list",
        "kind": 2,
        "importPath": "apps.companies.views.bank_list.bank_list",
        "description": "apps.companies.views.bank_list.bank_list",
        "peekOfCode": "def bank_list(request):\n    #nominas = Nomina.objects.select_related('idnomina').values('idnomina__nombrenomina', 'idnomina').distinct().order_by('-idnomina')\n    nominas = Nomina.objects.select_related('idnomina').values_list('idnomina__nombrenomina', 'idnomina').distinct().order_by('-idnomina')\n    compects = []\n    acumulados = {}\n    selected_nomina = request.GET.get('nomina')\n    if selected_nomina:\n        compectos = Nomina.objects.filter(idnomina=selected_nomina)\n        for data in compectos:\n            docidentidad = data.idempleado.docidentidad",
        "detail": "apps.companies.views.bank_list.bank_list",
        "documentation": {}
    },
    {
        "label": "bank_list_get",
        "kind": 2,
        "importPath": "apps.companies.views.bank_list.bank_list",
        "description": "apps.companies.views.bank_list.bank_list",
        "peekOfCode": "def bank_list_get(request):\n    count_cuenta_1 = 0\n    count_cuenta_2 = 0\n    suma_total_pagos = 0\n    acumulados = {}\n    id_nomina = request.GET.get('id_nomina')  \n    dataempresa = datos_cliente()\n    compectos = Nomina.objects.filter(idnomina=id_nomina)\n    banco = Bancos.objects.get(digchequeo =dataempresa['banco'] )\n    for data in compectos:",
        "detail": "apps.companies.views.bank_list.bank_list",
        "documentation": {}
    },
    {
        "label": "bank_file",
        "kind": 2,
        "importPath": "apps.companies.views.bank_list.bank_list",
        "description": "apps.companies.views.bank_list.bank_list",
        "peekOfCode": "def bank_file(request,idnomina):\n    # Obtener la fecha actual\n    fecha_actual = datetime.now()\n    # Formatear la fecha como AAAAMMDD\n    fecha_formateada = fecha_actual.strftime(\"%Y%m%d\")\n    compects = []\n    acumulados = {}\n    suma_total_pagos = 0\n    count_cuenta_1 = 0\n    compectos = Nomina.objects.filter(idnomina=idnomina).order_by('idempleado__papellido')  ",
        "detail": "apps.companies.views.bank_list.bank_list",
        "documentation": {}
    },
    {
        "label": "obtener_numero_documento",
        "kind": 2,
        "importPath": "apps.companies.views.bank_list.identificador",
        "description": "apps.companies.views.bank_list.identificador",
        "peekOfCode": "def obtener_numero_documento(tipo_texto):\n    tipo_documento = {\n        'NIT': '01',\n        'CC': '02',\n        'TI': '03',\n        'CE': '04',\n        'PA': '05',\n        # 'Tarjeta Seguro Social': '06',\n        # 'Nit Menores': '07'\n    }",
        "detail": "apps.companies.views.bank_list.identificador",
        "documentation": {}
    },
    {
        "label": "BirthdayView",
        "kind": 6,
        "importPath": "apps.companies.views.birthday.birthday",
        "description": "apps.companies.views.birthday.birthday",
        "peekOfCode": "class BirthdayView(View):\n    def get(self, request):\n        # Obtener el mes de los parámetros GET, o usar el mes actual por defecto\n        mes = int(request.GET.get('mes', datetime.now().month))\n        # Filtrar empleados que cumplen años en el mes seleccionado\n        cumpleanieros = Contratosemp.objects.filter(fechanac__month=mes,estadocontrato=1)\n        # Si el parámetro 'descargar' está presente en los GET, generar un archivo Excel\n        if 'descargar' in request.GET:\n            workbook = openpyxl.Workbook()\n            sheet = workbook.active",
        "detail": "apps.companies.views.birthday.birthday",
        "documentation": {}
    },
    {
        "label": "charges",
        "kind": 2,
        "importPath": "apps.companies.views.charges.charges",
        "description": "apps.companies.views.charges.charges",
        "peekOfCode": "def charges(request): \n    if request.method == 'POST':\n        form = chargesForm(request.POST)\n        if form.is_valid():\n            nuevo_cargo = Cargos(\n                nombrecargo=form.cleaned_data['nombrecargo']\n            )\n            nuevo_cargo.save()\n            messages.success(request, 'El cargo ha sido añadido con éxito.')\n            return redirect('companies:charges')",
        "detail": "apps.companies.views.charges.charges",
        "documentation": {}
    },
    {
        "label": "EditContracVisual",
        "kind": 2,
        "importPath": "apps.companies.views.editContract.editContract",
        "description": "apps.companies.views.editContract.editContract",
        "peekOfCode": "def EditContracVisual(request,idempleado):\n    empleado = Contratosemp.objects.get(idempleado=int(idempleado)) \n    contrato = Contratos.objects.get(idempleado=idempleado, estadocontrato=1)\n    DicContract = {\n        'Idcontrato': contrato.idcontrato,\n        'FechaTerminacion': str(contrato.fechafincontrato),\n        'Empleado': empleado.papellido + ' ' + empleado.sapellido + ' ' + empleado.pnombre + ' ' + empleado.snombre + ' CC: ' + str(empleado.docidentidad),\n        'TipoNomina': contrato.tiponomina,\n        'Cargo': contrato.cargo,\n        'LugarTrabajo': contrato.ciudadcontratacion.idciudad ,",
        "detail": "apps.companies.views.editContract.editContract",
        "documentation": {}
    },
    {
        "label": "headquarters",
        "kind": 2,
        "importPath": "apps.companies.views.headquarters.headquarters",
        "description": "apps.companies.views.headquarters.headquarters",
        "peekOfCode": "def headquarters(request): \n    if request.method == 'POST':\n        form = headquartersForm(request.POST)\n        if form.is_valid():\n            try:\n                nombresede = form.cleaned_data['nombresede']\n                cajacompensacion = form.cleaned_data['cajacompensacion']\n                aux = Entidadessegsocial.objects.get(codigo=cajacompensacion)\n                with transaction.atomic():\n                    sede = Sedes.objects.create(",
        "detail": "apps.companies.views.headquarters.headquarters",
        "documentation": {}
    },
    {
        "label": "index_companies",
        "kind": 2,
        "importPath": "apps.companies.views.index.index",
        "description": "apps.companies.views.index.index",
        "peekOfCode": "def index_companies(request):\n    return render(request, './companies/index.html')",
        "detail": "apps.companies.views.index.index",
        "documentation": {}
    },
    {
        "label": "laborcertification",
        "kind": 2,
        "importPath": "apps.companies.views.laborcertification.laborcertification",
        "description": "apps.companies.views.laborcertification.laborcertification",
        "peekOfCode": "def laborcertification(request):\n    contratos_empleados = Contratos.objects\\\n        .select_related('idempleado', 'idcosto', 'tipocontrato', 'idsede') \\\n        .values('idempleado__docidentidad', 'idempleado__papellido', 'idempleado__pnombre',\n                'idempleado__snombre', 'fechainiciocontrato', 'cargo', 'salario', 'idcosto__nomcosto',\n                'tipocontrato__tipocontrato', 'centrotrabajo__tarifaarl')\n    empleados = []\n    for contrato in contratos_empleados:\n        nombre_empleado = f\"{contrato['idempleado__papellido']} {contrato['idempleado__pnombre']} {contrato['idempleado__snombre']}\"\n        contrato_data = {",
        "detail": "apps.companies.views.laborcertification.laborcertification",
        "documentation": {}
    },
    {
        "label": "generate_random_password",
        "kind": 2,
        "importPath": "apps.companies.views.loginweb.loginweb",
        "description": "apps.companies.views.loginweb.loginweb",
        "peekOfCode": "def generate_random_password(length=12):\n    characters = string.ascii_letters + string.digits + string.punctuation\n    return ''.join(random.choice(characters) for i in range(length))\ndef create_user_and_usuario(email, pnombre, papellido, password, empresa, id_empleado):\n    try:\n        user = User.objects.create(\n            username=email,\n            first_name=pnombre,\n            last_name=papellido,\n            email=email,",
        "detail": "apps.companies.views.loginweb.loginweb",
        "documentation": {}
    },
    {
        "label": "create_user_and_usuario",
        "kind": 2,
        "importPath": "apps.companies.views.loginweb.loginweb",
        "description": "apps.companies.views.loginweb.loginweb",
        "peekOfCode": "def create_user_and_usuario(email, pnombre, papellido, password, empresa, id_empleado):\n    try:\n        user = User.objects.create(\n            username=email,\n            first_name=pnombre,\n            last_name=papellido,\n            email=email,\n            password=password,\n            is_staff=False,\n            is_superuser=False,",
        "detail": "apps.companies.views.loginweb.loginweb",
        "documentation": {}
    },
    {
        "label": "loginweb",
        "kind": 2,
        "importPath": "apps.companies.views.loginweb.loginweb",
        "description": "apps.companies.views.loginweb.loginweb",
        "peekOfCode": "def loginweb(request):\n    db_name = request.session.get('usuario', {}).get('db')\n    if request.method == 'POST':\n        selected_ids = request.POST.getlist('selected_ids')\n        if selected_ids:\n            for selected in selected_ids:\n                try:\n                    usertempo = Contratosemp.objects.get(idempleado = selected)\n                    usuario = Usuario.objects.get(id_empleado=usertempo.idempleado)\n                except Contratosemp.DoesNotExist:",
        "detail": "apps.companies.views.loginweb.loginweb",
        "documentation": {}
    },
    {
        "label": "newContractVisual",
        "kind": 2,
        "importPath": "apps.companies.views.newContract.newContract",
        "description": "apps.companies.views.newContract.newContract",
        "peekOfCode": "def newContractVisual(request):   \n    empleados = Contratosemp.objects.filter(estadocontrato=4)\n    return render(request, './companies/newContractVisual.html',{'empleados':empleados})\n@custom_login_required\n@custom_permission('entrepreneur')\ndef newContractCreater(request,idempleado):\n    empleado = get_object_or_404(Contratosemp, idempleado=idempleado)\n    if request.method == 'POST':\n        try:\n            form = ContractForm(request.POST)            ",
        "detail": "apps.companies.views.newContract.newContract",
        "documentation": {}
    },
    {
        "label": "newContractCreater",
        "kind": 2,
        "importPath": "apps.companies.views.newContract.newContract",
        "description": "apps.companies.views.newContract.newContract",
        "peekOfCode": "def newContractCreater(request,idempleado):\n    empleado = get_object_or_404(Contratosemp, idempleado=idempleado)\n    if request.method == 'POST':\n        try:\n            form = ContractForm(request.POST)            \n            if form.is_valid():\n                contratos_instance = Contratos(\n                    cargo =form.cleaned_data['position'],\n                    fechainiciocontrato =form.cleaned_data['contractStartDate'],\n                    fechafincontrato =form.cleaned_data['endDate'],",
        "detail": "apps.companies.views.newContract.newContract",
        "documentation": {}
    },
    {
        "label": "generate_random_password",
        "kind": 2,
        "importPath": "apps.companies.views.newEmployee.newEmployee",
        "description": "apps.companies.views.newEmployee.newEmployee",
        "peekOfCode": "def generate_random_password(length=12):\n    characters = string.ascii_letters + string.digits + string.punctuation\n    random_password = ''.join(random.choice(characters) for i in range(length))\n    return random_password\n@custom_login_required\n@custom_permission('entrepreneur')\ndef newEmployee(request):\n    if request.method == 'POST':\n        form = EmployeeForm(request.POST)\n        if form.is_valid():",
        "detail": "apps.companies.views.newEmployee.newEmployee",
        "documentation": {}
    },
    {
        "label": "newEmployee",
        "kind": 2,
        "importPath": "apps.companies.views.newEmployee.newEmployee",
        "description": "apps.companies.views.newEmployee.newEmployee",
        "peekOfCode": "def newEmployee(request):\n    if request.method == 'POST':\n        form = EmployeeForm(request.POST)\n        if form.is_valid():\n            singleton = NombreDBSingleton()\n            nombre_db = singleton.get_nombre_db()\n            empresa = Empresa.objects.using('default').get(db_name=nombre_db)\n            try:\n                height = form.cleaned_data['height']\n                weight = form.cleaned_data['weight']",
        "detail": "apps.companies.views.newEmployee.newEmployee",
        "documentation": {}
    },
    {
        "label": "nominatedcertificate",
        "kind": 2,
        "importPath": "apps.companies.views.nominatedcertificate.nominatedcertificate",
        "description": "apps.companies.views.nominatedcertificate.nominatedcertificate",
        "peekOfCode": "def nominatedcertificate(request):\n    contratos_empleados = Contratos.objects\\\n        .select_related('idempleado', 'idcosto', 'tipocontrato', 'idsede') \\\n        .filter(estadocontrato=1) \\\n        .values('idempleado__docidentidad', 'idempleado__papellido', 'idempleado__pnombre',\n                'idempleado__snombre', 'fechainiciocontrato', 'cargo', 'salario', 'idcosto__nomcosto',\n                'tipocontrato__tipocontrato', 'centrotrabajo__tarifaarl')\n    empleados = []\n    for contrato in contratos_empleados:\n        nombre_empleado = f\"{contrato['idempleado__papellido']} {contrato['idempleado__pnombre']} {contrato['idempleado__snombre']}\"",
        "detail": "apps.companies.views.nominatedcertificate.nominatedcertificate",
        "documentation": {}
    },
    {
        "label": "payrollaccumulations",
        "kind": 2,
        "importPath": "apps.companies.views.payrollaccumulations.payrollaccumulations",
        "description": "apps.companies.views.payrollaccumulations.payrollaccumulations",
        "peekOfCode": "def payrollaccumulations(request):\n    liquidaciones = None\n    if request.method == 'POST':\n        form = ReportFilterForm(request.POST)\n        if form.is_valid():\n            # Aplicar filtros a la consulta de Liquidacion\n            liquidaciones = Liquidacion.objects.all()\n            # Obtener los parámetros de búsqueda del request.GET\n            employee = form.cleaned_data['employee']\n            cost_center = form.cleaned_data['cost_center']",
        "detail": "apps.companies.views.payrollaccumulations.payrollaccumulations",
        "documentation": {}
    },
    {
        "label": "get_email_status",
        "kind": 2,
        "importPath": "apps.companies.views.payrollsheet.payrollsheet",
        "description": "apps.companies.views.payrollsheet.payrollsheet",
        "peekOfCode": "def get_email_status(estado_email):\n    if estado_email == 1:\n        envio_email = 'Enviado'\n    elif estado_email == 2:\n        envio_email = 'Error'\n    else:\n        envio_email = 'Sin Enviar'\n    return envio_email\ndef payrollsheet(request):\n    #nominas = Nomina.objects.select_related('idnomina').values('idnomina__nombrenomina', 'idnomina').distinct().order_by('-idnomina')",
        "detail": "apps.companies.views.payrollsheet.payrollsheet",
        "documentation": {}
    },
    {
        "label": "payrollsheet",
        "kind": 2,
        "importPath": "apps.companies.views.payrollsheet.payrollsheet",
        "description": "apps.companies.views.payrollsheet.payrollsheet",
        "peekOfCode": "def payrollsheet(request):\n    #nominas = Nomina.objects.select_related('idnomina').values('idnomina__nombrenomina', 'idnomina').distinct().order_by('-idnomina')\n    nominas = Nomina.objects.select_related('idnomina').values_list('idnomina__nombrenomina', 'idnomina').distinct().order_by('-idnomina')\n    compects = []\n    acumulados = {}\n    selected_nomina = request.GET.get('nomina')\n    if selected_nomina:\n        compectos = Nomina.objects.filter(idnomina=selected_nomina)[:50]\n        # Consulta 1: Total neto\n        # neto = Nomina.objects.filter(idnomina=id_nomina).aggregate(Sum('valor'))['valor__sum'] or 0",
        "detail": "apps.companies.views.payrollsheet.payrollsheet",
        "documentation": {}
    },
    {
        "label": "generatepayrollsummary",
        "kind": 2,
        "importPath": "apps.companies.views.payrollsheet.payrollsheet",
        "description": "apps.companies.views.payrollsheet.payrollsheet",
        "peekOfCode": "def generatepayrollsummary(request,idnomina):\n    context = generate_summary(idnomina)\n    html_string = render(request, './html/payrollsummary.html', context).content.decode('utf-8')\n    fecha_actual = datetime.now().strftime('%Y-%m-%d')\n    pdf = BytesIO()\n    pisa_status = pisa.CreatePDF(html_string, dest=pdf)\n    pdf.seek(0)\n    if pisa_status.err:\n        return HttpResponse('Error al generar el PDF', status=400)\n    nombre_archivo = f'Certificado_{idnomina}_{fecha_actual}.pdf'",
        "detail": "apps.companies.views.payrollsheet.payrollsheet",
        "documentation": {}
    },
    {
        "label": "generatepayrollcertificate",
        "kind": 2,
        "importPath": "apps.companies.views.payrollsheet.payrollsheet",
        "description": "apps.companies.views.payrollsheet.payrollsheet",
        "peekOfCode": "def generatepayrollcertificate(request ,idnomina,idcontrato,):\n    context = genera_comprobante(idnomina,idcontrato)\n    html_string = render(request, './html/payrollcertificate.html', context).content.decode('utf-8')\n    fecha_actual = datetime.now().strftime('%Y-%m-%d')\n    pdf = BytesIO()\n    pisa_status = pisa.CreatePDF(html_string, dest=pdf)\n    pdf.seek(0)\n    if pisa_status.err:\n        return HttpResponse('Error al generar el PDF', status=400)\n    nombre_archivo = f'Certificado_{context[\"cc\"]}_{fecha_actual}.pdf'",
        "detail": "apps.companies.views.payrollsheet.payrollsheet",
        "documentation": {}
    },
    {
        "label": "massive_mail",
        "kind": 2,
        "importPath": "apps.companies.views.payrollsheet.payrollsheet",
        "description": "apps.companies.views.payrollsheet.payrollsheet",
        "peekOfCode": "def massive_mail(request):\n    if request.method == 'POST':\n        nomina = request.POST.get('nomina2', '')\n        # Verificación de que el campo nomina no esté vacío y sea un número\n        if not nomina:\n            return JsonResponse({'error': 'El campo nomina no debe estar vacío.'}, status=400)\n        if not nomina.isdigit():\n            return JsonResponse({'error': 'El campo nomina debe ser un número.'}, status=400)\n        try:\n            compectos = Nomina.objects.filter(idnomina=int(nomina)).distinct('idcontrato')[:5]",
        "detail": "apps.companies.views.payrollsheet.payrollsheet",
        "documentation": {}
    },
    {
        "label": "unique_mail",
        "kind": 2,
        "importPath": "apps.companies.views.payrollsheet.payrollsheet",
        "description": "apps.companies.views.payrollsheet.payrollsheet",
        "peekOfCode": "def unique_mail(request,idnomina,idcontrato):\n    print('llege perra')\n    context = genera_comprobante(idnomina, idcontrato)\n    html_string = render(request, './html/payrollcertificate.html', context).content.decode('utf-8')\n    fecha_actual = datetime.now().strftime('%Y-%m-%d')\n    pdf = BytesIO()\n    pisa_status = pisa.CreatePDF(html_string, dest=pdf)\n    pdf.seek(0)\n    if pisa_status.err:\n        return HttpResponse('Error al generar el PDF', status=400)",
        "detail": "apps.companies.views.payrollsheet.payrollsheet",
        "documentation": {}
    },
    {
        "label": "payrollsheet",
        "kind": 2,
        "importPath": "apps.companies.views.payrollsheet.payrollsheet",
        "description": "apps.companies.views.payrollsheet.payrollsheet",
        "peekOfCode": "def payrollsheet(request):\n    nominas = Nomina.objects.select_related('idnomina').values_list('idnomina__nombrenomina', 'idnomina').distinct().order_by('-idnomina')\n    compects = []  # Define compects here\n    acumulados = {}\n    selected_nomina = request.GET.get('nomina')\n    if selected_nomina:\n        compectos = Nomina.objects.filter(idnomina = selected_nomina )\n        for data in compectos:\n            docidentidad = data.idempleado.docidentidad\n            if docidentidad not in acumulados:",
        "detail": "apps.companies.views.payrollsheet.payrollsheet",
        "documentation": {}
    },
    {
        "label": "payrollsummary",
        "kind": 2,
        "importPath": "apps.companies.views.payrollsummary.payrollsummary",
        "description": "apps.companies.views.payrollsummary.payrollsummary",
        "peekOfCode": "def payrollsummary(request):\n    contratos_empleados = Contratos.objects\\\n        .select_related('idempleado', 'idcosto', 'tipocontrato', 'idsede') \\\n        .filter(estadocontrato=1) \\\n        .values('idempleado__docidentidad', 'idempleado__papellido', 'idempleado__pnombre',\n                'idempleado__snombre', 'fechainiciocontrato', 'cargo', 'salario', 'idcosto__nomcosto',\n                'tipocontrato__tipocontrato', 'centrotrabajo__tarifaarl')\n    empleados = []\n    for contrato in contratos_empleados:\n        nombre_empleado = f\"{contrato['idempleado__papellido']} {contrato['idempleado__pnombre']} {contrato['idempleado__snombre']}\"",
        "detail": "apps.companies.views.payrollsummary.payrollsummary",
        "documentation": {}
    },
    {
        "label": "settlementlist",
        "kind": 2,
        "importPath": "apps.companies.views.settlementlist.settlementlist",
        "description": "apps.companies.views.settlementlist.settlementlist",
        "peekOfCode": "def settlementlist(request):\n    liquidaciones = Liquidacion.objects.all()\n    return render(request, 'companies/settlementlist.html',{\n        'liquidaciones':liquidaciones,\n    } )",
        "detail": "apps.companies.views.settlementlist.settlementlist",
        "documentation": {}
    },
    {
        "label": "get_empleado_name",
        "kind": 2,
        "importPath": "apps.companies.views.workcertificate.workcertificate",
        "description": "apps.companies.views.workcertificate.workcertificate",
        "peekOfCode": "def get_empleado_name(empleado):\n    papellido = empleado.get('idempleado__papellido', '') if empleado.get('idempleado__papellido') is not None else \"\"\n    sapellido = empleado.get('idempleado__sapellido', '') if empleado.get('idempleado__sapellido') is not None else \"\"\n    pnombre = empleado.get('idempleado__pnombre', '') if empleado.get('idempleado__pnombre') is not None else \"\"\n    snombre = empleado.get('idempleado__snombre', '') if empleado.get('idempleado__snombre') is not None else \"\"\n    return f\"{papellido} {sapellido} {pnombre} {snombre}\"\ndef workcertificate(request):\n    ESTADOS_CONTRATO = {\n        1: \"ACTIVO\",\n        2: \"TERMINADO\"",
        "detail": "apps.companies.views.workcertificate.workcertificate",
        "documentation": {}
    },
    {
        "label": "workcertificate",
        "kind": 2,
        "importPath": "apps.companies.views.workcertificate.workcertificate",
        "description": "apps.companies.views.workcertificate.workcertificate",
        "peekOfCode": "def workcertificate(request):\n    ESTADOS_CONTRATO = {\n        1: \"ACTIVO\",\n        2: \"TERMINADO\"\n    }\n    selected_empleado = request.GET.get('empleado')\n    if selected_empleado:\n        certi_all = Certificaciones.objects.filter(idempleado=selected_empleado).select_related('idempleado').values('idcert', \n                                                                                                                        'idempleado__papellido',\n                                                                                                                        'idempleado__pnombre',",
        "detail": "apps.companies.views.workcertificate.workcertificate",
        "documentation": {}
    },
    {
        "label": "generateworkcertificate",
        "kind": 2,
        "importPath": "apps.companies.views.workcertificate.workcertificate",
        "description": "apps.companies.views.workcertificate.workcertificate",
        "peekOfCode": "def generateworkcertificate(request):\n    try:\n        if request.method == 'POST':\n            empleado_id = request.POST.get('empleado')\n            contrato_id = request.POST.get('contrato')\n            data_input = request.POST.get('data_input')\n            data_model = request.POST.get('data_model')\n            context = workcertificategenerator( contrato_id , data_input ,data_model)\n            html_string = render(request, './html/workcertificatework.html', context).content.decode('utf-8')\n            pdf = BytesIO()",
        "detail": "apps.companies.views.workcertificate.workcertificate",
        "documentation": {}
    },
    {
        "label": "certificatedownload",
        "kind": 2,
        "importPath": "apps.companies.views.workcertificate.workcertificate",
        "description": "apps.companies.views.workcertificate.workcertificate",
        "peekOfCode": "def certificatedownload(request,idcert):\n    try:\n        context = workcertificatedownload(idcert)\n        html_string = render(request, './html/workcertificatework.html', context).content.decode('utf-8')\n        pdf = BytesIO()\n        pisa_status = pisa.CreatePDF(html_string, dest=pdf)\n        pdf.seek(0)\n        if pisa_status.err:\n            return HttpResponse('Error al generar el PDF', status=400)\n        response = HttpResponse(pdf, content_type='application/pdf')",
        "detail": "apps.companies.views.workcertificate.workcertificate",
        "documentation": {}
    },
    {
        "label": "workplace",
        "kind": 2,
        "importPath": "apps.companies.views.workplace.workplace",
        "description": "apps.companies.views.workplace.workplace",
        "peekOfCode": "def workplace(request): \n    if request.method == 'POST':\n        form = workplaceForm(request.POST)\n        if form.is_valid():\n            nombre_centrotrabajo = form.cleaned_data['nombrecentrotrabajo']\n            tarifa_arl = form.cleaned_data['tarifaarl']\n            centro_trabajo = Centrotrabajo.objects.create(\n                nombrecentrotrabajo=nombre_centrotrabajo,\n                tarifaarl=tarifa_arl\n            )",
        "detail": "apps.companies.views.workplace.workplace",
        "documentation": {}
    },
    {
        "label": "CompaniesConfig",
        "kind": 6,
        "importPath": "apps.companies.appscompanies",
        "description": "apps.companies.appscompanies",
        "peekOfCode": "class CompaniesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'companies'",
        "detail": "apps.companies.appscompanies",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Contratos(models.Model):\n    cargo = models.CharField(max_length=50, blank=True, null=True)\n    fechainiciocontrato = models.DateField(blank=True, null=True)\n    fechafincontrato = models.DateField(blank=True, null=True)\n    tipocontrato = models.ForeignKey('Tipocontrato', models.DO_NOTHING, db_column='tipocontrato', blank=True, null=True) ## cambiar a entero \n    tiponomina = models.CharField(max_length=12, blank=True, null=True)\n    bancocuenta = models.CharField(max_length=30, blank=True, null=True)\n    cuentanomina = models.CharField(max_length=30, blank=True, null=True)\n    tipocuentanomina = models.CharField(max_length=15, blank=True, null=True)\n    eps = models.CharField(max_length=125, blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Contratosemp(models.Model):\n    docidentidad = models.BigIntegerField(unique=True)\n    tipodocident = models.CharField(max_length=20, blank=True, null=True)\n    pnombre = models.CharField(max_length=50, blank=True, null=True)\n    snombre = models.CharField(max_length=50, blank=True, null=True)\n    papellido = models.CharField(max_length=50, blank=True, null=True)\n    sapellido = models.CharField(max_length=50, blank=True, null=True)\n    fechanac = models.DateField(blank=True, null=True)\n    ciudadnacimiento = models.TextField(blank=True, null=True)\n    telefonoempleado = models.CharField(max_length=12, blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Costos",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Costos(models.Model):\n    nomcosto = models.CharField(max_length=30, blank=True, null=True)\n    idcosto = models.AutoField(primary_key=True)\n    grupocontable = models.CharField(max_length=4, blank=True, null=True)\n    suficosto = models.CharField(max_length=2, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'costos'\n    def __str__(self):\n        return f\"{self.nomcosto}\"",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "ModelosContratos",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class ModelosContratos(models.Model):\n    idmodelo = models.SmallIntegerField(primary_key=True)\n    nombremodelo = models.CharField(max_length=255, blank=True, null=True)\n    tipocontrato = models.CharField(max_length=255, blank=True, null=True)\n    textocontrato = models.CharField(max_length=10485760, blank=True, null=True)\n    estadomodelo = models.SmallIntegerField(blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'modelos_contratos'\nclass Sedes(models.Model):",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Sedes",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Sedes(models.Model):\n    nombresede = models.CharField(max_length=40, blank=True, null=True)\n    cajacompensacion = models.CharField(max_length=60, blank=True, null=True)\n    idsede = models.AutoField(primary_key=True)\n    codccf = models.CharField(max_length=8, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'sedes'\nclass Subcostos(models.Model):\n    nomsubcosto = models.CharField(max_length=30, blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Subcostos",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Subcostos(models.Model):\n    nomsubcosto = models.CharField(max_length=30, blank=True, null=True)\n    nomcosto = models.CharField(max_length=30, blank=True, null=True)\n    idsubcosto = models.AutoField(primary_key=True)\n    idcosto = models.SmallIntegerField(blank=True, null=True)\n    sufisubcosto = models.CharField(max_length=2, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'subcostos'\n    def __str__(self):",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipocontrato",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Tipocontrato(models.Model):\n    idtipocontrato = models.IntegerField(primary_key=True)\n    tipocontrato = models.CharField(max_length=255, blank=True, null=True)\n    cod_dian = models.SmallIntegerField(blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'tipocontrato'\n    def __str__(self):\n        return f\"{self.tipocontrato}\"\nclass Centrotrabajo(models.Model):",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Centrotrabajo",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Centrotrabajo(models.Model):\n    nombrecentrotrabajo = models.CharField(max_length=30, blank=True, null=True)\n    tarifaarl = models.DecimalField(max_digits=5, decimal_places=3, blank=True, null=True)\n    centrotrabajo = models.AutoField(primary_key=True)\n    class Meta:\n        managed = False\n        db_table = 'centrotrabajo'\n    def __str__(self):\n        return f\"{self.nombrecentrotrabajo}\"\nclass Tipodocumento(models.Model):",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipodocumento",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Tipodocumento(models.Model):\n    id_tipo_doc = models.CharField(max_length=10, primary_key=True)\n    documento = models.CharField(max_length=50, blank=True, null=True)\n    codigo = models.CharField(max_length=4, blank=True, null=True)\n    cod_dian = models.SmallIntegerField(blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'tipodocumento'\nclass Profesiones(models.Model):\n    idprofesion = models.SmallIntegerField(primary_key=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Profesiones",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Profesiones(models.Model):\n    idprofesion = models.SmallIntegerField(primary_key=True)\n    profesion = models.CharField(max_length=180, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'profesiones'\nclass Paises(models.Model):\n    idpais = models.CharField(max_length=10, primary_key=True)\n    pais = models.CharField(max_length=50, blank=True, null=True)\n    class Meta:",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Paises",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Paises(models.Model):\n    idpais = models.CharField(max_length=10, primary_key=True)\n    pais = models.CharField(max_length=50, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'paises'\nclass Ciudades(models.Model):\n    idciudad = models.CharField(max_length=10, primary_key=True)\n    ciudad = models.CharField(max_length=50, db_collation='es_ES', blank=True, null=True)\n    departamento = models.CharField(max_length=50, db_collation='es_ES', blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Ciudades(models.Model):\n    idciudad = models.CharField(max_length=10, primary_key=True)\n    ciudad = models.CharField(max_length=50, db_collation='es_ES', blank=True, null=True)\n    departamento = models.CharField(max_length=50, db_collation='es_ES', blank=True, null=True)\n    codciudad = models.CharField(max_length=10, blank=True, null=True)\n    coddepartamento = models.CharField(max_length=10, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'ciudades'\nclass Tiposalario(models.Model):",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tiposalario",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Tiposalario(models.Model):\n    idtiposalario = models.SmallIntegerField(primary_key=True)\n    tiposalario = models.CharField(max_length=40, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'tiposalario'\n    def __str__(self):\n        return f\"{self.tiposalario}\"\nclass Cargos(models.Model):\n    idcargo = models.AutoField(primary_key=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Cargos",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Cargos(models.Model):\n    idcargo = models.AutoField(primary_key=True)\n    nombrecargo = models.CharField(max_length=50)\n    nombrenivel = models.CharField(max_length=50, blank=True, null=True)\n    cargojefe = models.CharField(max_length=50, blank=True, null=True)\n    cargosacargo = models.CharField(blank=True, null=True)\n    estado = models.BooleanField()\n    class Meta:\n        managed = False\n        db_table = 'cargos'",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Bancos",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Bancos(models.Model):\n    idbanco = models.IntegerField(primary_key=True)\n    nombanco = models.CharField(max_length=255, blank=True, null=True)\n    codbanco = models.CharField(max_length=255, blank=True, null=True)\n    codach = models.CharField(max_length=255, blank=True, null=True)\n    digchequeo = models.CharField(max_length=255, blank=True, null=True)\n    nitbanco = models.CharField(max_length=255, blank=True, null=True)\n    tamcorriente = models.CharField(max_length=255, blank=True, null=True)\n    tamahorro = models.CharField(max_length=255, blank=True, null=True)\n    oficina = models.CharField(max_length=255, blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Entidadessegsocial",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Entidadessegsocial(models.Model):\n    codigo = models.CharField(primary_key=True, max_length=9)\n    nit = models.CharField(max_length=12)\n    entidad = models.CharField(max_length=120)\n    tipoentidad = models.CharField(max_length=20)\n    codsgp = models.CharField(max_length=10, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'entidadessegsocial'\nclass Tipodenomina(models.Model):",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Tipodenomina",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Tipodenomina(models.Model):\n    idtiponomina = models.IntegerField(primary_key=True)\n    tipodenomina = models.CharField(max_length=255)\n    cod_dian = models.SmallIntegerField(blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'tipodenomina'\nclass Contabgrupos(models.Model):\n    idgrupo = models.CharField(primary_key=True, max_length=2)\n    grupocontable = models.CharField(max_length=40, blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Contabgrupos",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Contabgrupos(models.Model):\n    idgrupo = models.CharField(primary_key=True, max_length=2)\n    grupocontable = models.CharField(max_length=40, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'contabgrupos'\n##* nomina : \nclass Nomina(models.Model):\n    idregistronom = models.IntegerField(primary_key=True)\n    nombreconcepto = models.CharField(max_length=255, blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Nomina(models.Model):\n    idregistronom = models.IntegerField(primary_key=True)\n    nombreconcepto = models.CharField(max_length=255, blank=True, null=True)\n    valor = models.IntegerField(blank=True, null=True)\n    mesacumular = models.CharField(max_length=15, blank=True, null=True)\n    anoacumular = models.CharField(max_length=15, blank=True, null=True)\n    idempleado = models.ForeignKey(Contratosemp, models.DO_NOTHING, db_column='idempleado', blank=True, null=True)\n    cantidad = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)\n    idconcepto = models.ForeignKey('Conceptosdenomina', models.DO_NOTHING, db_column='idconcepto')\n    idnomina = models.ForeignKey('Crearnomina', models.DO_NOTHING, db_column='idnomina')",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Conceptosdenomina",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Conceptosdenomina(models.Model):\n    nombreconcepto = models.CharField(max_length=30)\n    multiplicadorconcepto = models.DecimalField(max_digits=4, decimal_places=2)\n    tipoconcepto = models.IntegerField()\n    sueldobasico = models.IntegerField(blank=True, null=True)\n    auxtransporte = models.IntegerField(blank=True, null=True)\n    baseprestacionsocial = models.IntegerField(blank=True, null=True)\n    ingresotributario = models.IntegerField(blank=True, null=True)\n    prestacionsocial = models.IntegerField(blank=True, null=True)\n    extras = models.IntegerField(blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Crearnomina",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Crearnomina(models.Model):\n    nombrenomina = models.CharField(max_length=40, blank=True, null=True)\n    fechainicial = models.DateField(blank=True, null=True)\n    fechafinal = models.DateField(blank=True, null=True)\n    fechapago = models.DateField(blank=True, null=True)\n    tipodenomina = models.CharField(max_length=2, blank=True, null=True)\n    mesacumular = models.CharField(max_length=20, blank=True, null=True)\n    anoacumular = models.CharField(max_length=4, blank=True, null=True)\n    estadonomina = models.SmallIntegerField(blank=True, null=True)\n    diasnomina = models.SmallIntegerField(blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "NominaComprobantes",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class NominaComprobantes(models.Model):\n    idhistorico = models.AutoField(primary_key=True)\n    idcontrato = models.IntegerField(blank=True, null=True)\n    salario = models.IntegerField(blank=True, null=True)\n    cargo = models.CharField(max_length=120, blank=True, null=True)\n    idcosto = models.SmallIntegerField(blank=True, null=True)\n    pension = models.CharField(max_length=125, blank=True, null=True)\n    salud = models.CharField(max_length=125, blank=True, null=True)\n    idnomina = models.IntegerField(blank=True, null=True)\n    envio_email = models.SmallIntegerField(blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "Liquidacion",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class Liquidacion(models.Model):\n    idliquidacion = models.IntegerField(primary_key=True)  # The composite primary key (idliquidacion, idcontrato) found, that is not supported. The first column is selected.\n    docidentidad = models.CharField(max_length=15, blank=True, null=True)\n    diastrabajados = models.CharField(max_length=8, blank=True, null=True)\n    cesantias = models.CharField(max_length=30, blank=True, null=True)\n    prima = models.CharField(max_length=30, blank=True, null=True)\n    vacaciones = models.CharField(max_length=30, blank=True, null=True)\n    intereses = models.CharField(max_length=30, blank=True, null=True)\n    totalliq = models.CharField(max_length=30, blank=True, null=True)\n    diascesantias = models.CharField(max_length=8, blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "LiquidacionMasivo",
        "kind": 6,
        "importPath": "apps.companies.models",
        "description": "apps.companies.models",
        "peekOfCode": "class LiquidacionMasivo(models.Model):\n    idliquidacion = models.IntegerField(primary_key=True)  # The composite primary key (idliquidacion, idcontrato) found, that is not supported. The first column is selected.\n    docidentidad = models.CharField(max_length=15, blank=True, null=True)\n    diastrabajados = models.CharField(max_length=8, blank=True, null=True)\n    cesantias = models.CharField(max_length=30, blank=True, null=True)\n    prima = models.CharField(max_length=30, blank=True, null=True)\n    vacaciones = models.CharField(max_length=30, blank=True, null=True)\n    intereses = models.CharField(max_length=30, blank=True, null=True)\n    totalliq = models.CharField(max_length=30, blank=True, null=True)\n    diascesantias = models.CharField(max_length=8, blank=True, null=True)",
        "detail": "apps.companies.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.companies.urls",
        "description": "apps.companies.urls",
        "peekOfCode": "urlpatterns = [\n    ##todo novedades de nomina\n    path('employees/contract', ContractsList.startCompanies , name='startcompanies'),\n    path('employees/excel1', ContractsList.exportar_excel1 , name='exportar_excel1'),\n    path('employees/excel2', ContractsList.exportar_excel2 , name='exportar_excel2'),\n    path('employees/new/employee', newEmployee.newEmployee , name='newemployee'),\n    path('employees/edit/employee',  EditEmployee.EditEmployeeSearch , name='editemployeesearch'),\n    path('employees/edit/employee/<str:idempleado>',  EditEmployee.EditEmployeeVisual , name='editemployeevisual'),\n    path('employees/new/contract',newContract.newContractVisual ,name='newcontractvisual'),\n    path('employees/new/contract/<str:idempleado>',newContract.newContractCreater ,name='newcontractcreater'),",
        "detail": "apps.companies.urls",
        "documentation": {}
    },
    {
        "label": "CustomAuthBackend",
        "kind": 6,
        "importPath": "apps.components.custom_auth_backend",
        "description": "apps.components.custom_auth_backend",
        "peekOfCode": "class CustomAuthBackend(ModelBackend):\n    def authenticate(self, request, username=None, password=None, **kwargs):\n        try:\n            user = User.objects.using(\"default\").get(username=username)\n            if user.check_password(password):\n                return user\n        except User.DoesNotExist:\n            return None\n    def get_user(self, user_id):\n        try:",
        "detail": "apps.components.custom_auth_backend",
        "documentation": {}
    },
    {
        "label": "datos_cliente",
        "kind": 2,
        "importPath": "apps.components.datacompanies",
        "description": "apps.components.datacompanies",
        "peekOfCode": "def datos_cliente():\n    empresa_data = Empresa.objects.filter(idempresa=1).values().first()\n    if empresa_data:\n        info_cliente = {\n            'idempresa': empresa_data['idempresa'],\n            'nit': empresa_data['nit'],\n            'nombreempresa': empresa_data['nombreempresa'],\n            'direccionempresa': empresa_data['direccionempresa'],\n            'replegal': empresa_data['replegal'],\n            'arl': empresa_data['arl'],",
        "detail": "apps.components.datacompanies",
        "documentation": {}
    },
    {
        "label": "datos_empleado",
        "kind": 2,
        "importPath": "apps.components.dataemployees",
        "description": "apps.components.dataemployees",
        "peekOfCode": "def datos_empleado(id_contrato=15):\n    contrato = Contratos.objects.get(idcontrato=id_contrato)\n    empleado = Contratosemp.objects.filter(idempleado=contrato.idempleado_id).annotate(\n        nombre_letras=Concat(F('pnombre'), Value(' '), F('snombre'), Value(' '), \n                                F('papellido'), Value(' '), F('sapellido'), output_field=CharField())\n                                ).values('nombre_letras').first()\n    info_empleado = {\n        'nombre_completo': empleado['nombre_letras'], \n        'fechainiciocontrato': contrato.fechainiciocontrato,\n        'fechafincontrato': contrato.fechafincontrato,",
        "detail": "apps.components.dataemployees",
        "documentation": {}
    },
    {
        "label": "datos_empleado2",
        "kind": 2,
        "importPath": "apps.components.dataemployees",
        "description": "apps.components.dataemployees",
        "peekOfCode": "def datos_empleado2(id_empleado):\n    try:\n        empleado = Contratosemp.objects.only('pnombre', 'snombre', 'papellido', 'sapellido', 'email','fotografiaempleado').get(idempleado=id_empleado)\n        if empleado.fotografiaempleado and hasattr(empleado.fotografiaempleado, 'url'):\n            url_foto = empleado.fotografiaempleado.url\n        else:\n            url_foto = None\n        nombre_completo = f\"{empleado.pnombre} {empleado.papellido}\"\n        info_empleado = {\n            'nombre_completo': nombre_completo.strip(),  # Elimina espacios en blanco adicionales",
        "detail": "apps.components.dataemployees",
        "documentation": {}
    },
    {
        "label": "TempSession",
        "kind": 6,
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "peekOfCode": "class TempSession:\n    \"\"\"\n    Una clase singleton que representa una sesión temporal.\n    Esta clase proporciona funcionalidad para gestionar una sesión temporal con el propósito de autenticación de usuarios.\n    Mantiene el estado de si un usuario ha iniciado sesión o no, así como los permisos y el tipo de usuario.\n    Atributos:\n        _instance (TempSession): La instancia singleton de la clase TempSession.\n        user_logged_in (bool): Bandera que indica si un usuario ha iniciado sesión.\n        permissions (list): Lista de permisos del usuario.\n        user_type (str): Tipo de usuario (por ejemplo, 'admin', 'usuario_normal', etc.).",
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_login_required",
        "kind": 2,
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "peekOfCode": "def custom_login_required(view_func):\n    @wraps(view_func)\n    def wrapper(request, *args, **kwargs):\n        if not TempSession().is_logged_in():\n            return redirect('login:login')\n        return view_func(request, *args, **kwargs)\n    return wrapper\ndef custom_permission(permission):\n    def decorator(view_func):\n        @wraps(view_func)",
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "custom_permission",
        "kind": 2,
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "peekOfCode": "def custom_permission(permission):\n    def decorator(view_func):\n        @wraps(view_func)\n        def _wrapped_view(request, *args, **kwargs):\n            if TempSession().have_permission() != permission:\n                return redirect('login:permission')\n            return view_func(request, *args, **kwargs)\n        return _wrapped_view\n    return decorator\ndef default_login(view_func):",
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "default_login",
        "kind": 2,
        "importPath": "apps.components.decorators",
        "description": "apps.components.decorators",
        "peekOfCode": "def default_login(view_func):\n    @wraps(view_func)\n    def _wrapped_view(request, *args, **kwargs):\n        if TempSession().is_logged_in(): \n            return redirect_by_role(TempSession().have_permission())\n        return view_func(request, *args, **kwargs)\n    return _wrapped_view\nclass TempSession:\n    \"\"\"\n    Una clase singleton que representa una sesión temporal.",
        "detail": "apps.components.decorators",
        "documentation": {}
    },
    {
        "label": "formttex",
        "kind": 2,
        "importPath": "apps.components.format",
        "description": "apps.components.format",
        "peekOfCode": "def formttex(cadena, max_caracteres):\n    # Verificar si la cadena excede el máximo de caracteres permitidos\n    if len(cadena) > max_caracteres:\n        raise ValueError(f'Cadena \"{cadena}\" excede el máximo de {max_caracteres} caracteres.')\n    # Limitar la cadena al máximo de caracteres especificado\n    cadena_limitada = cadena[:max_caracteres]\n    # Rellenar con ceros a la izquierda si es necesario\n    if len(cadena_limitada) < max_caracteres:\n        cadena_formateada = cadena_limitada.zfill(max_caracteres)\n    else:",
        "detail": "apps.components.format",
        "documentation": {}
    },
    {
        "label": "formtnun",
        "kind": 2,
        "importPath": "apps.components.format",
        "description": "apps.components.format",
        "peekOfCode": "def formtnun(cadena, max_caracteres):\n    if isinstance(cadena, (int, float)):\n        cadena = f\"{cadena:.2f}\"\n        if len(cadena) > max_caracteres:\n            raise ValueError(f'Cadena \"{cadena}\" excede el máximo de {max_caracteres} caracteres.')\n        # Verificar si la cadena excede el máximo de caracteres permitidos\n        # Rellenar con ceros a la izquierda si es necesario\n        if len(cadena) < max_caracteres:\n            cadena = cadena.replace('.', '')\n            cadena_formateada = cadena.zfill(max_caracteres)",
        "detail": "apps.components.format",
        "documentation": {}
    },
    {
        "label": "format_value",
        "kind": 2,
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "peekOfCode": "def format_value(value):\n    if value is None:\n        return '0'\n    try:\n        return \"{:,}\".format(int(value)).replace(\",\", \".\")\n    except ValueError:\n        return str(value)\ndef format_value_float(value):\n    if value is None:\n        return '0'",
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value_float",
        "kind": 2,
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "peekOfCode": "def format_value_float(value):\n    if value is None:\n        return '0'\n    try:\n        return \"{:,}\".format(float(value)).replace(\",\", \".\")\n    except ValueError:\n        return str(value)\ndef format_value_void(value):\n    if value is None or value is 0:\n        return ' '",
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "format_value_void",
        "kind": 2,
        "importPath": "apps.components.humani",
        "description": "apps.components.humani",
        "peekOfCode": "def format_value_void(value):\n    if value is None or value is 0:\n        return ' '\n    try:\n        return \"{:,}\".format(int(value)).replace(\",\", \".\")\n    except ValueError:\n        return str(value)",
        "detail": "apps.components.humani",
        "documentation": {}
    },
    {
        "label": "send_template_email",
        "kind": 2,
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "peekOfCode": "def send_template_email(email_type, context, subject, recipient_list, from_email=None):\n    if from_email is None:\n        from_email = settings.EMAIL_HOST_USER\n    email_templates = {\n        'welcome': 'mails/bienvenido.html',\n        'password_reset': 'mails/resetpassword.html',\n        'loginweb': 'mails/cuentausuario.html',\n        'vacations': 'mails/vacations.html',\n    }\n    template_name = email_templates.get(email_type)",
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "send_template_email2",
        "kind": 2,
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "peekOfCode": "def send_template_email2(email_type, context, subject, recipient_list, from_email=None):\n    if from_email is None:\n        from_email = settings.EMAIL_HOST_USER\n    email_templates = {\n        'welcome': 'mails/bienvenido.html',\n        'password_reset': 'mails/resetpassword.html',\n        'loginweb': 'mails/cuentausuario.html',\n        'vacations': 'mails/vacations.html',\n    }\n    template_name = email_templates.get(email_type)",
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "send_template_email3",
        "kind": 2,
        "importPath": "apps.components.mail",
        "description": "apps.components.mail",
        "peekOfCode": "def send_template_email3(email_type, context, subject, recipient_list, from_email=None, attachment=None):\n    if from_email is None:\n        from_email = settings.EMAIL_HOST_USER\n    email_templates = {\n        'welcome': 'mails/bienvenido.html',\n        'password_reset': 'mails/resetpassword.html',\n        'loginweb': 'mails/cuentausuario.html',\n        'vacations': 'mails/vacations.html',\n        'nomina1':'mails/correo_de_nomina.html'\n    }",
        "detail": "apps.components.mail",
        "documentation": {}
    },
    {
        "label": "limitar_cadena",
        "kind": 2,
        "importPath": "apps.components.payrollgenerate",
        "description": "apps.components.payrollgenerate",
        "peekOfCode": "def limitar_cadena(cadena, max_length=25):\n    if len(cadena) > max_length:\n        return cadena[:max_length-3] + '...'\n    return cadena\ndef genera_comprobante(idnomina, idcontrato):\n    contrato = Contratos.objects.filter(idcontrato=idcontrato).first()\n    crear = Crearnomina.objects.filter(idnomina=idnomina).first()\n    datac = datos_cliente()\n    if contrato:\n        nombre_completo = f\"{contrato.idempleado.papellido} {contrato.idempleado.sapellido} {contrato.idempleado.pnombre} {contrato.idempleado.snombre}\"",
        "detail": "apps.components.payrollgenerate",
        "documentation": {}
    },
    {
        "label": "genera_comprobante",
        "kind": 2,
        "importPath": "apps.components.payrollgenerate",
        "description": "apps.components.payrollgenerate",
        "peekOfCode": "def genera_comprobante(idnomina, idcontrato):\n    contrato = Contratos.objects.filter(idcontrato=idcontrato).first()\n    crear = Crearnomina.objects.filter(idnomina=idnomina).first()\n    datac = datos_cliente()\n    if contrato:\n        nombre_completo = f\"{contrato.idempleado.papellido} {contrato.idempleado.sapellido} {contrato.idempleado.pnombre} {contrato.idempleado.snombre}\"\n        # Obtener datos de devengados y descuentos\n        dataDevengado = Nomina.objects.filter(idcontrato=idcontrato, idnomina=idnomina, valor__gt=0).order_by('idconcepto')\n        dataDescuento = Nomina.objects.filter(idcontrato=idcontrato, idnomina=idnomina, valor__lt=0).order_by('idconcepto')\n        # Formatear valores con puntos para los miles en dataDevengado",
        "detail": "apps.components.payrollgenerate",
        "documentation": {}
    },
    {
        "label": "generate_summary",
        "kind": 2,
        "importPath": "apps.components.payrollgenerate",
        "description": "apps.components.payrollgenerate",
        "peekOfCode": "def generate_summary(idnomina):\n    # Obtener datos del cliente\n    datac = datos_cliente()\n    # Obtener la nómina y la información de creación de la nómina\n    try:\n        nominas = Nomina.objects.filter(idnomina=idnomina)\n        nominas2 = Crearnomina.objects.get(idnomina=idnomina)\n        nombre_nomina = nominas2.nombrenomina\n    except Nomina.DoesNotExist or Crearnomina.DoesNotExist:\n        # Manejar el caso de que no existan las nóminas",
        "detail": "apps.components.payrollgenerate",
        "documentation": {}
    },
    {
        "label": "generate_qr_code",
        "kind": 2,
        "importPath": "apps.components.qrgenerate",
        "description": "apps.components.qrgenerate",
        "peekOfCode": "def generate_qr_code(data):\n    # Creamos un objeto QRCode\n    qr = qrcode.QRCode(\n        version=1,  # Tamaño del código QR (1-40)\n        error_correction=qrcode.constants.ERROR_CORRECT_L,  # Nivel de corrección de errores\n        box_size=10,  # Tamaño de cada \"cuadro\" en el código QR\n        border=4,  # Ancho del borde del código QR\n    )\n    # Añadimos los datos al objeto QRCode\n    qr.add_data(data)",
        "detail": "apps.components.qrgenerate",
        "documentation": {}
    },
    {
        "label": "redirect_by_role",
        "kind": 2,
        "importPath": "apps.components.role_redirect",
        "description": "apps.components.role_redirect",
        "peekOfCode": "def redirect_by_role(user):\n    role_views = {\n        'administrator': 'admin:admin',\n        'accountant': 'accountant_dashboard',\n        'employees': 'employees:index_employees',\n        'entrepreneur': 'companies:index_companies',\n    }\n    role = user\n    return redirect(role_views.get(role, 'error_page'))\ndef redirect_by_role2(user):",
        "detail": "apps.components.role_redirect",
        "documentation": {}
    },
    {
        "label": "redirect_by_role2",
        "kind": 2,
        "importPath": "apps.components.role_redirect",
        "description": "apps.components.role_redirect",
        "peekOfCode": "def redirect_by_role2(user):\n    role_views = {\n        'administrator': 'admin:admin',\n        'accountant': 'accountant_dashboard',\n        'employees': 'employees:index_employees',\n        'entrepreneur': 'companies:index_companies',\n    }\n    role = user\n    return role_views.get(role, 'error_page')",
        "detail": "apps.components.role_redirect",
        "documentation": {}
    },
    {
        "label": "calcular_dias_360",
        "kind": 2,
        "importPath": "apps.components.utils",
        "description": "apps.components.utils",
        "peekOfCode": "def calcular_dias_360(fechainicial, fechafinal):\n    #Calcula la diferencia entre dos fechas considerando todos los meses con 30 dias.\n    fechainicial = datetime.strptime(fechainicial, \"%Y-%m-%d\")\n    fechafinal = datetime.strptime(fechafinal, \"%Y-%m-%d\")\n    anios_diferencia = fechafinal.year - fechainicial.year\n    meses_diferencia = fechafinal.month - fechainicial.month\n    dias_diferencia = fechafinal.day - fechainicial.day\n    dias_totales_360 = (anios_diferencia * 360) + (meses_diferencia * 30) + dias_diferencia\n    return dias_totales_360",
        "detail": "apps.components.utils",
        "documentation": {}
    },
    {
        "label": "validate_password_format",
        "kind": 2,
        "importPath": "apps.components.validators",
        "description": "apps.components.validators",
        "peekOfCode": "def validate_password_format(value):\n    if len(value) < 8:\n        raise ValidationError(\"La contraseña debe tener al menos 8 caracteres.\")\n    if not re.search(r\"[A-Z]\", value):\n        raise ValidationError(\"La contraseña debe contener al menos una letra mayúscula.\")\n    if not re.search(r\"\\d\", value):\n        raise ValidationError(\"La contraseña debe contener al menos un número.\")\n    if not re.search(r\"[!@#$%^&*(),.?\\\":{}|<>]\", value):\n        raise ValidationError(\"La contraseña debe contener al menos un carácter especial.\")\n    if len(value) > 20:",
        "detail": "apps.components.validators",
        "documentation": {}
    },
    {
        "label": "generar_codigo",
        "kind": 2,
        "importPath": "apps.components.workcertificategenerator",
        "description": "apps.components.workcertificategenerator",
        "peekOfCode": "def generar_codigo():\n    caracteres = string.ascii_letters + string.digits  # Letras mayúsculas, minúsculas y dígitos\n    codigo = ''.join(random.choice(caracteres) for _ in range(5))\n    return codigo\n# Generador de meses anteriores \ndef calculo_salario_promedio():\n    mes_actual = datetime.datetime.now().month\n    ano_actual = datetime.datetime.now().year\n    # Diccionario de meses\n    meses_dict = {",
        "detail": "apps.components.workcertificategenerator",
        "documentation": {}
    },
    {
        "label": "calculo_salario_promedio",
        "kind": 2,
        "importPath": "apps.components.workcertificategenerator",
        "description": "apps.components.workcertificategenerator",
        "peekOfCode": "def calculo_salario_promedio():\n    mes_actual = datetime.datetime.now().month\n    ano_actual = datetime.datetime.now().year\n    # Diccionario de meses\n    meses_dict = {\n        1: \"ENERO\",\n        2: \"FEBRERO\",\n        3: \"MARZO\",\n        4: \"ABRIL\",\n        5: \"MAYO\",",
        "detail": "apps.components.workcertificategenerator",
        "documentation": {}
    },
    {
        "label": "workcertificategenerator",
        "kind": 2,
        "importPath": "apps.components.workcertificategenerator",
        "description": "apps.components.workcertificategenerator",
        "peekOfCode": "def workcertificategenerator(ide,destino ,modelo):\n    zona_horaria = pytz.timezone('America/Bogota')\n    nombre_mes_1, nombre_mes_2, nombre_mes_3, ano_1, ano_2, ano_3 = calculo_salario_promedio()\n    datae = datos_empleado(ide)\n    datac = datos_cliente()\n    idc = datae['idc']\n    idemp = datae['ide']\n    empleado = Contratosemp.objects.get(idempleado=idemp)\n    fecha_actual = timezone.now().astimezone(zona_horaria)\n    salario = datae['salario']",
        "detail": "apps.components.workcertificategenerator",
        "documentation": {}
    },
    {
        "label": "workcertificatedownload",
        "kind": 2,
        "importPath": "apps.components.workcertificategenerator",
        "description": "apps.components.workcertificategenerator",
        "peekOfCode": "def workcertificatedownload(idcert):\n    datac = datos_cliente()\n    certificado = Certificaciones.objects.get(idcert = idcert)\n    datae = datos_empleado(certificado.idcontrato)\n    context = {\n            ## empresa \n            'empresa':datac['nombre_empresa'],\n            'rrhh':datac['nombre_rrhh'],\n            'nit': datac['nit_empresa'],\n            'direccion':datac['direccion_empresa'],",
        "detail": "apps.components.workcertificategenerator",
        "documentation": {}
    },
    {
        "label": "FormularioCertificaciones",
        "kind": 6,
        "importPath": "apps.employees.forms.certificado_laboral_form",
        "description": "apps.employees.forms.certificado_laboral_form",
        "peekOfCode": "class FormularioCertificaciones(forms.Form):\n    destino = forms.CharField(\n        label='Destino',\n        max_length=100,\n        widget=forms.TextInput(attrs={'placeholder': 'A quien va dirigida la certificación'})\n        )\n    opciones = (\n        ('', 'Escoja el tipo de Salario'),\n        ('1', 'Con salario básico'),\n        ('2', 'Con salario promedio'),",
        "detail": "apps.employees.forms.certificado_laboral_form",
        "documentation": {}
    },
    {
        "label": "EditEmployeesForm",
        "kind": 6,
        "importPath": "apps.employees.forms.edit_employees_form",
        "description": "apps.employees.forms.edit_employees_form",
        "peekOfCode": "class EditEmployeesForm(forms.Form):\n    phone = forms.CharField(max_length=12, label='Telefono',required=False)\n    address = forms.CharField(max_length=100, label='Direccion',required=False)\n    profile_picture = forms.ImageField(label='Imagen de perfil', required=False)\n    cell = forms.CharField(max_length=12, label='Celular',required=False)\n    def __init__(self, *args, **kwargs):\n        initial = kwargs.get('initial', {})\n        super(EditEmployeesForm, self).__init__(*args, **kwargs)\n        self.fields['phone'].initial = initial.get('phone', '')\n        self.fields['address'].initial = initial.get('address', '')",
        "detail": "apps.employees.forms.edit_employees_form",
        "documentation": {}
    },
    {
        "label": "CustomPasswordChangeForm",
        "kind": 6,
        "importPath": "apps.employees.forms.newpasswordform",
        "description": "apps.employees.forms.newpasswordform",
        "peekOfCode": "class CustomPasswordChangeForm(PasswordChangeForm):\n    old_password = forms.CharField(\n        label=\"Contraseña actual\",\n        widget=forms.PasswordInput,\n        strip=False,\n    )\n    new_password1 = forms.CharField(\n        label=\"Nueva contraseña\",\n        widget=forms.PasswordInput,\n        strip=False,",
        "detail": "apps.employees.forms.newpasswordform",
        "documentation": {}
    },
    {
        "label": "EmpVacacionesForm",
        "kind": 6,
        "importPath": "apps.employees.forms.vacation_request_form",
        "description": "apps.employees.forms.vacation_request_form",
        "peekOfCode": "class EmpVacacionesForm(forms.ModelForm):\n    class Meta:\n        model = EmpVacaciones\n        fields = ['idcontrato', 'tipovac', 'fechainicialvac', 'fechafinalvac', 'cuentasabados', 'diasvac', 'comentarios']\n        labels = {\n            'fechainicialvac': 'Fecha Inicial',\n            'fechafinalvac': 'Fecha Final',\n            'comentarios': 'Comentarios',\n            'diasvac': 'Dias a Compensar',\n        }",
        "detail": "apps.employees.forms.vacation_request_form",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.employees.migrations.0001_initial",
        "description": "apps.employees.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Certificaciones',\n            fields=[\n                ('idcert', models.AutoField(primary_key=True, serialize=False)),\n                ('destino', models.CharField(blank=True, max_length=100, null=True)),",
        "detail": "apps.employees.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.employees.migrations.0002_centrotrabajo_ciudades_costos_empvacaciones_and_more",
        "description": "apps.employees.migrations.0002_centrotrabajo_ciudades_costos_empvacaciones_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('employees', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Centrotrabajo',\n            fields=[\n                ('nombrecentrotrabajo', models.CharField(blank=True, max_length=30, null=True)),\n                ('tarifaarl', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True)),",
        "detail": "apps.employees.migrations.0002_centrotrabajo_ciudades_costos_empvacaciones_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.employees.migrations.0003_festivos_ingresosyretenciones",
        "description": "apps.employees.migrations.0003_festivos_ingresosyretenciones",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('employees', '0002_centrotrabajo_ciudades_costos_empvacaciones_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Festivos',\n            fields=[\n                ('idfestivo', models.IntegerField(primary_key=True, serialize=False)),\n                ('dia', models.DateField(blank=True, null=True)),",
        "detail": "apps.employees.migrations.0003_festivos_ingresosyretenciones",
        "documentation": {}
    },
    {
        "label": "last_business_day_of_march",
        "kind": 2,
        "importPath": "apps.employees.views.viewdian.diangenerate",
        "description": "apps.employees.views.viewdian.diangenerate",
        "peekOfCode": "def last_business_day_of_march(year):\n    # Last day of March\n    last_day_of_march = datetime.date(int(year), 3, 31)\n    # Day of the week (Monday=0, Sunday=6)\n    day_of_week = last_day_of_march.weekday()\n    # If the last day of March is Saturday (5) or Sunday (6)\n    if day_of_week == 5:  # Saturday\n        last_business_day = last_day_of_march - datetime.timedelta(days=1)\n    elif day_of_week == 6:  # Sunday\n        last_business_day = last_day_of_march - datetime.timedelta(days=2)",
        "detail": "apps.employees.views.viewdian.diangenerate",
        "documentation": {}
    },
    {
        "label": "diangenerate",
        "kind": 2,
        "importPath": "apps.employees.views.viewdian.diangenerate",
        "description": "apps.employees.views.viewdian.diangenerate",
        "peekOfCode": "def diangenerate():\n    contexto = {\n        'data':'data'\n    }\n    return contexto",
        "detail": "apps.employees.views.viewdian.diangenerate",
        "documentation": {}
    },
    {
        "label": "print_session",
        "kind": 2,
        "importPath": "apps.employees.views.viewdian.elimiar",
        "description": "apps.employees.views.viewdian.elimiar",
        "peekOfCode": "def print_session(request):\n    # Obtén todos los datos de la sesión\n    session_data = request.session.items()\n    # Crea una respuesta en formato de texto plano\n    response_content = \"Datos de la sesión:\\n\"\n    for key, value in session_data:\n        response_content += f\"{key}: {value}\\n\"\n    return HttpResponse(response_content, content_type=\"text/plain\")",
        "detail": "apps.employees.views.viewdian.elimiar",
        "documentation": {}
    },
    {
        "label": "imggenerate1",
        "kind": 2,
        "importPath": "apps.employees.views.viewdian.imggenerate",
        "description": "apps.employees.views.viewdian.imggenerate",
        "peekOfCode": "def imggenerate1(idingret):\n    certificado = Ingresosyretenciones.objects.filter(idingret=idingret).first()\n    dataempresa = datos_cliente()\n    year, month, day = last_business_day_of_march(certificado.anoacumular)\n    posision1 = {\n        'año': {'x': 507, 'y': 68, 'data': str(certificado.anoacumular)},\n        'nformulario': {'x': 522, 'y': 115, 'data': str(certificado.idingret)},\n        'nit': {'x': 63, 'y': 156, 'data': str(dataempresa['nit_empresa'])},\n        'dv': {'x': 304, 'y': 156, 'data': str(dataempresa['dv'])},\n        'razon': {'x': 136, 'y': 175, 'data': str(dataempresa['nombre_empresa'])},",
        "detail": "apps.employees.views.viewdian.imggenerate",
        "documentation": {}
    },
    {
        "label": "viewdian",
        "kind": 2,
        "importPath": "apps.employees.views.viewdian.viewdian",
        "description": "apps.employees.views.viewdian.viewdian",
        "peekOfCode": "def viewdian(request):\n    ide = request.session.get('idempleado', {})\n    # Realizar una única consulta y usar el resultado para ambas necesidades\n    reten = Ingresosyretenciones.objects.filter(idempleado=ide)\n    years_query = reten.values('anoacumular').first()\n    years = years_query['anoacumular'] if years_query else None\n    return render(request, 'employees/viewdian.html', {\n        'reten': reten,\n        'years': years,\n    })",
        "detail": "apps.employees.views.viewdian.viewdian",
        "documentation": {}
    },
    {
        "label": "viewdian_empleado",
        "kind": 2,
        "importPath": "apps.employees.views.viewdian.viewdian",
        "description": "apps.employees.views.viewdian.viewdian",
        "peekOfCode": "def viewdian_empleado(request,idingret ):\n    # Generar la imagen usando la función personalizada\n    certificado = Ingresosyretenciones.objects.filter(idingret=idingret).values('anoacumular').first()\n    image = imggenerate1(idingret)\n    # Guardar la imagen en un archivo temporal\n    temp_image_path = \"temp_image.png\"\n    image.save(temp_image_path, format='PNG')\n    response = HttpResponse(content_type='application/pdf')\n    response['Content-Disposition'] = 'inline; filename=\"imagen_modificada.pdf\"'  # Cambiar a 'inline' para abrir en el navegador\n    pdf = canvas.Canvas(response, pagesize=letter)",
        "detail": "apps.employees.views.viewdian.viewdian",
        "documentation": {}
    },
    {
        "label": "get_empleado_name",
        "kind": 2,
        "importPath": "apps.employees.views.certificaciones_laborales",
        "description": "apps.employees.views.certificaciones_laborales",
        "peekOfCode": "def get_empleado_name(empleado):\n    papellido = empleado.get('idempleado__papellido', '') if empleado.get('idempleado__papellido') is not None else \"\"\n    sapellido = empleado.get('idempleado__sapellido', '') if empleado.get('idempleado__sapellido') is not None else \"\"\n    pnombre = empleado.get('idempleado__pnombre', '') if empleado.get('idempleado__pnombre') is not None else \"\"\n    snombre = empleado.get('idempleado__snombre', '') if empleado.get('idempleado__snombre') is not None else \"\"\n    return f\"{papellido} {sapellido} {pnombre} {snombre}\"\n@login_required\n@custom_permission('employees')\ndef vista_certificaciones(request):\n    select_data = {}",
        "detail": "apps.employees.views.certificaciones_laborales",
        "documentation": {}
    },
    {
        "label": "vista_certificaciones",
        "kind": 2,
        "importPath": "apps.employees.views.certificaciones_laborales",
        "description": "apps.employees.views.certificaciones_laborales",
        "peekOfCode": "def vista_certificaciones(request):\n    select_data = {}\n    ESTADOS_CONTRATO = {\n        1: \"ACTIVO\",\n        2: \"TERMINADO\"\n    }\n    ide = request.session.get('idempleado', {})\n    selected_empleado = request.GET.get('contrato')\n    lista_certificaciones = []\n    select = None",
        "detail": "apps.employees.views.certificaciones_laborales",
        "documentation": {}
    },
    {
        "label": "generateworkcertificate",
        "kind": 2,
        "importPath": "apps.employees.views.certificaciones_laborales",
        "description": "apps.employees.views.certificaciones_laborales",
        "peekOfCode": "def generateworkcertificate(request):\n    try:\n        if request.method == 'POST':\n            empleado_id = request.POST.get('empleado')\n            contrato_id = request.POST.get('contrato')\n            data_input = request.POST.get('data_input')\n            data_model = request.POST.get('data_model')\n            context = workcertificategenerator( contrato_id , data_input ,data_model)\n            html_string = render(request, './html/workcertificatework.html', context).content.decode('utf-8')\n            pdf = BytesIO()",
        "detail": "apps.employees.views.certificaciones_laborales",
        "documentation": {}
    },
    {
        "label": "certificatedownload",
        "kind": 2,
        "importPath": "apps.employees.views.certificaciones_laborales",
        "description": "apps.employees.views.certificaciones_laborales",
        "peekOfCode": "def certificatedownload(request,idcert):\n    try:\n        context = workcertificatedownload(idcert)\n        html_string = render(request, './html/workcertificatework.html', context).content.decode('utf-8')\n        pdf = BytesIO()\n        pisa_status = pisa.CreatePDF(html_string, dest=pdf)\n        pdf.seek(0)\n        if pisa_status.err:\n            return HttpResponse('Error al generar el PDF', status=400)\n        response = HttpResponse(pdf, content_type='application/pdf')",
        "detail": "apps.employees.views.certificaciones_laborales",
        "documentation": {}
    },
    {
        "label": "ListaNominas",
        "kind": 6,
        "importPath": "apps.employees.views.comprobantes_nomina",
        "description": "apps.employees.views.comprobantes_nomina",
        "peekOfCode": "class ListaNominas(ListView):\n    template_name = 'employees/comprobantes.html'\n    paginate_by = 30\n    context_object_name = 'nominas'\n    model = Nomina\n    ordering = 'idnomina'\n    def get_queryset(self):\n        #data = Nomina.objects.filter(idcontrato=2380).select_related('idnomina')\n        #queryset = Nomina.objects.select_related('Crearnomina').values('idcontrato', 'idnomina', 'Crearnomina__nombrenomina')\n        queryset = Nomina.objects.distinct('idnomina').filter(idcontrato=idc).order_by('-idnomina').select_related('idnomina')",
        "detail": "apps.employees.views.comprobantes_nomina",
        "documentation": {}
    },
    {
        "label": "ListaConceptosNomina",
        "kind": 6,
        "importPath": "apps.employees.views.comprobantes_nomina",
        "description": "apps.employees.views.comprobantes_nomina",
        "peekOfCode": "class ListaConceptosNomina(ListView):\n    model = Nomina\n    context_object_name = 'conceptos'\n    template_name = 'employees/recibo.html'\n    def nombreNomina(self):\n        nombrenomina = Crearnomina.objects.get(idnomina=idn).nombrenomina\n        return nombrenomina\n    def get_queryset(self):\n        queryset = Nomina.objects.filter(idcontrato=idc, idnomina=idn).order_by('idconcepto')\n        return queryset",
        "detail": "apps.employees.views.comprobantes_nomina",
        "documentation": {}
    },
    {
        "label": "listaNomina",
        "kind": 2,
        "importPath": "apps.employees.views.comprobantes_nomina",
        "description": "apps.employees.views.comprobantes_nomina",
        "peekOfCode": "def listaNomina(request):\n    ide = request.session.get('idempleado')\n    ESTADOS_CONTRATO = {\n        1: \"ACTIVO\",\n        2: \"TERMINADO\"\n    }\n    # Obtener todos los contratos del empleado\n    contratos_sin = Contratos.objects.filter(idempleado__idempleado=ide)\n    # Lista para almacenar los contratos formateados\n    contratos = []",
        "detail": "apps.employees.views.comprobantes_nomina",
        "documentation": {}
    },
    {
        "label": "generatepayrollcertificate",
        "kind": 2,
        "importPath": "apps.employees.views.comprobantes_nomina",
        "description": "apps.employees.views.comprobantes_nomina",
        "peekOfCode": "def generatepayrollcertificate(request ,idnomina,idcontrato,):\n    context = genera_comprobante(idnomina,idcontrato)\n    html_string = render(request, './html/payrollcertificate.html', context).content.decode('utf-8')\n    fecha_actual = datetime.now().strftime('%Y-%m-%d')\n    pdf = BytesIO()\n    pisa_status = pisa.CreatePDF(html_string, dest=pdf)\n    pdf.seek(0)\n    if pisa_status.err:\n        return HttpResponse('Error al generar el PDF', status=400)\n    nombre_archivo = f'Certificado_{context[\"cc\"]}_{fecha_actual}.pdf'",
        "detail": "apps.employees.views.comprobantes_nomina",
        "documentation": {}
    },
    {
        "label": "user_employees",
        "kind": 2,
        "importPath": "apps.employees.views.edituser",
        "description": "apps.employees.views.edituser",
        "peekOfCode": "def user_employees(request):\n    ide = request.session.get('idempleado', {})\n    data = Contratosemp.objects.only('direccionempleado', 'telefonoempleado', 'ciudadresidencia','fotografiaempleado','celular').get(idempleado=ide)\n    ciudadresidencia = Ciudades.objects.get(idciudad=data.ciudadresidencia) if data.ciudadresidencia else None\n    # direccionempleado\n    # telefono \n    # ciudadresidencia\n    return render(request, './employees/user.html',\n                    {\n                        'data':data,",
        "detail": "apps.employees.views.edituser",
        "documentation": {}
    },
    {
        "label": "edit_user_employees",
        "kind": 2,
        "importPath": "apps.employees.views.edituser",
        "description": "apps.employees.views.edituser",
        "peekOfCode": "def edit_user_employees(request):\n    usuario = request.session.get('usuario', {})\n    ide = request.session.get('idempleado', {})\n    data = Contratosemp.objects.only('direccionempleado', 'telefonoempleado', 'ciudadresidencia','celular').get(idempleado=ide)\n    if request.method == 'POST':\n        form = EditEmployeesForm(request.POST, request.FILES)\n        if 'profile_picture' in request.FILES:\n            data.fotografiaempleado = request.FILES['profile_picture']\n            data.save()\n            print('rapido')",
        "detail": "apps.employees.views.edituser",
        "documentation": {}
    },
    {
        "label": "InicioView",
        "kind": 6,
        "importPath": "apps.employees.views.home",
        "description": "apps.employees.views.home",
        "peekOfCode": "class InicioView(TemplateView):\n    \"\"\"vista que carga la pagina de inicio\"\"\"\n    template_name = 'home/inicio.html'\ndef busca_empleado(request):\n    mydata = Contratos.objects.filter(idcontrato='2477').values('idempleado')\n    values = Contratosemp.objects.filter(idempleado__in=mydata).values()\n    return render(request, 'home/inicio.html', {'context': values})\nclass ListaNominas(ListView):\n    template_name = 'home/inicio.html'\n    context_object_name = 'contratos'",
        "detail": "apps.employees.views.home",
        "documentation": {}
    },
    {
        "label": "ListaNominas",
        "kind": 6,
        "importPath": "apps.employees.views.home",
        "description": "apps.employees.views.home",
        "peekOfCode": "class ListaNominas(ListView):\n    template_name = 'home/inicio.html'\n    context_object_name = 'contratos'\n    model = Contratos\n    ordering = 'idcontrato'\n    def get_queryset(self):\n        datose = datos_empleado()\n        ide = datose['ide']\n        queryset = Contratos.objects.filter(idempleado=ide)\n        return queryset",
        "detail": "apps.employees.views.home",
        "documentation": {}
    },
    {
        "label": "busca_empleado",
        "kind": 2,
        "importPath": "apps.employees.views.home",
        "description": "apps.employees.views.home",
        "peekOfCode": "def busca_empleado(request):\n    mydata = Contratos.objects.filter(idcontrato='2477').values('idempleado')\n    values = Contratosemp.objects.filter(idempleado__in=mydata).values()\n    return render(request, 'home/inicio.html', {'context': values})\nclass ListaNominas(ListView):\n    template_name = 'home/inicio.html'\n    context_object_name = 'contratos'\n    model = Contratos\n    ordering = 'idcontrato'\n    def get_queryset(self):",
        "detail": "apps.employees.views.home",
        "documentation": {}
    },
    {
        "label": "index_employees",
        "kind": 2,
        "importPath": "apps.employees.views.index",
        "description": "apps.employees.views.index",
        "peekOfCode": "def index_employees(request):\n    usuario = request.session.get('usuario', {})\n    request.session['idempleado'] = usuario['id']\n    request.session['empleado'] = datos_empleado2(usuario['id'])\n    return render(request, './employees/index.html')",
        "detail": "apps.employees.views.index",
        "documentation": {}
    },
    {
        "label": "newpassword_employees",
        "kind": 2,
        "importPath": "apps.employees.views.newpassword",
        "description": "apps.employees.views.newpassword",
        "peekOfCode": "def newpassword_employees(request):\n    if request.method == 'POST':\n        form = CustomPasswordChangeForm(request.user, request.POST)\n        if form.is_valid():\n            user = form.save()\n            update_session_auth_hash(request, user) \n            messages.success(request, 'Tu contraseña ha sido cambiada exitosamente.')\n            return redirect('employees:user')\n        else:\n            messages.error(request, 'Por favor corrige los errores a continuación.')",
        "detail": "apps.employees.views.newpassword",
        "documentation": {}
    },
    {
        "label": "VacationList",
        "kind": 6,
        "importPath": "apps.employees.views.vacation_history",
        "description": "apps.employees.views.vacation_history",
        "peekOfCode": "class VacationList(ListView):\n    template_name = 'employees/vacation_history.html'\n    paginate_by = 10\n    context_object_name = 'vacation_history'\n    model = Vacaciones\n    ordering = 'idvacaciones'\n    def get_queryset(self):\n        ide = self.request.session.get('idempleado')\n        contrato = Contratos.objects.filter(idempleado=ide, estadocontrato=1).first()\n        idc = contrato.idcontrato if contrato else None",
        "detail": "apps.employees.views.vacation_history",
        "documentation": {}
    },
    {
        "label": "calcular_dias_habiles",
        "kind": 2,
        "importPath": "apps.employees.views.vacation_request",
        "description": "apps.employees.views.vacation_request",
        "peekOfCode": "def calcular_dias_habiles(fechainicialvac, fechafinalvac, cuentasabados, dias_festivos):\n    \"\"\"\n    Calcula los días hábiles entre dos fechas.\n    Si cuentasabados es 1, incluye los sábados. Los domingos nunca se cuentan.\n    Los días festivos también se excluyen.\n    \"\"\"\n    total_dias = 0\n    dia_actual = fechainicialvac\n    while dia_actual <= fechafinalvac:\n        if (dia_actual.weekday() != 6) and (dia_actual not in dias_festivos) and (dia_actual.weekday() != 5 or cuentasabados == 1):",
        "detail": "apps.employees.views.vacation_request",
        "documentation": {}
    },
    {
        "label": "get_client_ip",
        "kind": 2,
        "importPath": "apps.employees.views.vacation_request",
        "description": "apps.employees.views.vacation_request",
        "peekOfCode": "def get_client_ip(request):\n    x_forwarded_for = request.META.get('HTTP_X_FORWARDED_FOR')\n    if x_forwarded_for:\n        return x_forwarded_for.split(',')[0]\n    return request.META.get('REMOTE_ADDR')\n@login_required\n@custom_permission('employees')\ndef vacation_request_function(request):\n    ide = request.session.get('idempleado')\n    nombre_empleado = Contratosemp.objects.get(idempleado=ide).pnombre",
        "detail": "apps.employees.views.vacation_request",
        "documentation": {}
    },
    {
        "label": "vacation_request_function",
        "kind": 2,
        "importPath": "apps.employees.views.vacation_request",
        "description": "apps.employees.views.vacation_request",
        "peekOfCode": "def vacation_request_function(request):\n    ide = request.session.get('idempleado')\n    nombre_empleado = Contratosemp.objects.get(idempleado=ide).pnombre\n    contrato = Contratos.objects.filter(idempleado=ide, estadocontrato=1).first()\n    idc = contrato.idcontrato if contrato else None\n    contratof = Contratos.objects.get(idcontrato=idc)\n    inicio_contrato = contratof.fechainiciocontrato.strftime('%Y-%m-%d')\n    form = EmpVacacionesForm(request.POST or None)\n    if request.method == 'POST' and form.is_valid():\n        tipovac_obj = form.cleaned_data.get('tipovac')",
        "detail": "apps.employees.views.vacation_request",
        "documentation": {}
    },
    {
        "label": "my_get_view",
        "kind": 2,
        "importPath": "apps.employees.views.vacation_request",
        "description": "apps.employees.views.vacation_request",
        "peekOfCode": "def my_get_view(request):\n    global global_dato\n    if request.method == 'GET':\n        dato = request.GET.get('dato')\n        solicitud =  get_object_or_404(EmpVacaciones, pk=dato)\n        global_dato = dato\n        if solicitud.cuentasabados == 1:\n            nom_cuentasabados = 'Si'\n        else:\n            nom_cuentasabados = 'No'",
        "detail": "apps.employees.views.vacation_request",
        "documentation": {}
    },
    {
        "label": "global_dato",
        "kind": 5,
        "importPath": "apps.employees.views.vacation_request",
        "description": "apps.employees.views.vacation_request",
        "peekOfCode": "global_dato = None \n@csrf_exempt\ndef my_get_view(request):\n    global global_dato\n    if request.method == 'GET':\n        dato = request.GET.get('dato')\n        solicitud =  get_object_or_404(EmpVacaciones, pk=dato)\n        global_dato = dato\n        if solicitud.cuentasabados == 1:\n            nom_cuentasabados = 'Si'",
        "detail": "apps.employees.views.vacation_request",
        "documentation": {}
    },
    {
        "label": "datos_cliente",
        "kind": 2,
        "importPath": "apps.employees.context_global",
        "description": "apps.employees.context_global",
        "peekOfCode": "def datos_cliente():\n    nombre_empresa = Empresa.objects.get(idempresa=1).nombreempresa\n    nombre_rrhh = Empresa.objects.get(idempresa=1).contactorrhh\n    cargo_certificaciones = Empresa.objects.get(idempresa=1).cargocertificaciones\n    nit_empresa = Empresa.objects.get(idempresa=1).nit\n    direccion_empresa = Empresa.objects.get(idempresa=1).direccionempresa\n    ciudad_empresa = Empresa.objects.get(idempresa=1).ciudad\n    telefono_empresa = Empresa.objects.get(idempresa=1).telefono\n    website_empresa = Empresa.objects.get(idempresa=1).website\n    email_empresa = Empresa.objects.get(idempresa=1).email",
        "detail": "apps.employees.context_global",
        "documentation": {}
    },
    {
        "label": "datos_empleado",
        "kind": 2,
        "importPath": "apps.employees.context_global",
        "description": "apps.employees.context_global",
        "peekOfCode": "def datos_empleado(id_contrato=15):\n    contrato = Contratos.objects.get(idcontrato=id_contrato)\n    empleado = Contratosemp.objects.filter(idempleado=contrato.idempleado_id).annotate(\n        nombre_letras=Concat(F('pnombre'), Value(' '), F('snombre'), Value(' '), \n                                F('papellido'), Value(' '), F('sapellido'), output_field=CharField())\n                                ).values('nombre_letras').first()\n    info_empleado = {\n        'nombre_completo': empleado['nombre_letras'], \n        'fechainiciocontrato': contrato.fechainiciocontrato,\n        'cargo': contrato.cargo, ",
        "detail": "apps.employees.context_global",
        "documentation": {}
    },
    {
        "label": "Contratos",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Contratos(models.Model):\n    cargo = models.CharField(max_length=50, blank=True, null=True)\n    fechainiciocontrato = models.DateField(blank=True, null=True)\n    fechafincontrato = models.DateField(blank=True, null=True)\n    tipocontrato = models.ForeignKey('Tipocontrato', models.DO_NOTHING, db_column='tipocontrato', blank=True, null=True) ## cambiar a entero \n    tiponomina = models.CharField(max_length=12, blank=True, null=True)\n    bancocuenta = models.CharField(max_length=30, blank=True, null=True)\n    cuentanomina = models.CharField(max_length=30, blank=True, null=True)\n    tipocuentanomina = models.CharField(max_length=15, blank=True, null=True)\n    eps = models.CharField(max_length=125, blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Certificaciones",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Certificaciones(models.Model):\n    idcert = models.AutoField(primary_key=True)\n    destino = models.CharField(max_length=100, blank=True, null=True)\n    idempleado = models.ForeignKey('Contratosemp', models.DO_NOTHING, db_column='idempleado')\n    idcontrato = models.IntegerField(blank=True, null=True)\n    fecha = models.DateField(blank=True, null=True)\n    salario = models.IntegerField(blank=True, null=True)\n    cargo = models.CharField(max_length=100, blank=True, null=True)\n    tipocontrato = models.CharField(max_length=30, blank=True, null=True)\n    promediovariable = models.IntegerField(blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Tipocontrato",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Tipocontrato(models.Model):\n    idtipocontrato = models.IntegerField(primary_key=True)\n    tipocontrato = models.CharField(max_length=255, blank=True, null=True)\n    cod_dian = models.SmallIntegerField(blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'tipocontrato'\nclass Empresa(models.Model):\n    idempresa = models.CharField(primary_key=True, max_length=10)\n    nit = models.CharField(max_length=20)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Empresa(models.Model):\n    idempresa = models.CharField(primary_key=True, max_length=10)\n    nit = models.CharField(max_length=20)\n    nombreempresa = models.CharField(max_length=255, blank=True, null=True)\n    direccionempresa = models.CharField(max_length=255, blank=True, null=True)\n    replegal = models.CharField(max_length=255, blank=True, null=True)\n    arl = models.CharField(max_length=255, blank=True, null=True)\n    logo = models.CharField(max_length=40, blank=True, null=True)\n    ciudad = models.CharField(max_length=255, blank=True, null=True)\n    telefono = models.CharField(max_length=20, blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Crearnomina",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Crearnomina(models.Model):\n    nombrenomina = models.CharField(max_length=40, blank=True, null=True)\n    fechainicial = models.DateField(blank=True, null=True)\n    fechafinal = models.DateField(blank=True, null=True)\n    fechapago = models.DateField(blank=True, null=True)\n    tipodenomina = models.CharField(max_length=2, blank=True, null=True)\n    mesacumular = models.CharField(max_length=20, blank=True, null=True)\n    anoacumular = models.CharField(max_length=4, blank=True, null=True)\n    estadonomina = models.SmallIntegerField(blank=True, null=True)\n    diasnomina = models.SmallIntegerField(blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Conceptosdenomina",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Conceptosdenomina(models.Model):\n    nombreconcepto = models.CharField(max_length=30)\n    multiplicadorconcepto = models.DecimalField(max_digits=4, decimal_places=2)\n    tipoconcepto = models.IntegerField()\n    sueldobasico = models.IntegerField(blank=True, null=True)\n    auxtransporte = models.IntegerField(blank=True, null=True)\n    baseprestacionsocial = models.IntegerField(blank=True, null=True)\n    ingresotributario = models.IntegerField(blank=True, null=True)\n    prestacionsocial = models.IntegerField(blank=True, null=True)\n    extras = models.IntegerField(blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Nomina",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Nomina(models.Model):\n    idregistronom = models.IntegerField(primary_key=True)\n    nombreconcepto = models.CharField(max_length=255, blank=True, null=True)\n    valor = models.IntegerField(blank=True, null=True)\n    mesacumular = models.CharField(max_length=15, blank=True, null=True)\n    anoacumular = models.CharField(max_length=15, blank=True, null=True)\n    idempleado = models.IntegerField(blank=True, null=True)\n    cantidad = models.DecimalField(max_digits=5, decimal_places=1, blank=True, null=True)\n    idconcepto = models.ForeignKey(Conceptosdenomina, models.DO_NOTHING, db_column='idconcepto', blank=True, null=True)\n    idnomina = models.ForeignKey(Crearnomina, models.DO_NOTHING, db_column='idnomina', blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Contratosemp",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Contratosemp(models.Model):\n    docidentidad = models.BigIntegerField(unique=True)\n    tipodocident = models.CharField(max_length=20, blank=True, null=True)\n    pnombre = models.CharField(max_length=50, blank=True, null=True)\n    snombre = models.CharField(max_length=50, blank=True, null=True)\n    papellido = models.CharField(max_length=50, blank=True, null=True)\n    sapellido = models.CharField(max_length=50, blank=True, null=True)\n    fechanac = models.DateField(blank=True, null=True)\n    ciudadnacimiento = models.TextField(blank=True, null=True)\n    telefonoempleado = models.CharField(max_length=12, blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Centrotrabajo",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Centrotrabajo(models.Model):\n    nombrecentrotrabajo = models.CharField(max_length=30, blank=True, null=True)\n    tarifaarl = models.DecimalField(max_digits=5, decimal_places=3, blank=True, null=True)\n    centrotrabajo = models.SmallIntegerField(primary_key=True)\n    class Meta:\n        managed = False\n        db_table = 'centrotrabajo'\n    def __str__(self):\n        return f\"{self.nombrecentrotrabajo}\"\nclass Tiposalario(models.Model):",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Tiposalario",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Tiposalario(models.Model):\n    idtiposalario = models.SmallIntegerField(primary_key=True)\n    tiposalario = models.CharField(max_length=40, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'tiposalario'\n    def __str__(self):\n        return f\"{self.tiposalario}\"\nclass Costos(models.Model):\n    nomcosto = models.CharField(max_length=30, blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Costos",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Costos(models.Model):\n    nomcosto = models.CharField(max_length=30, blank=True, null=True)\n    idcosto = models.SmallIntegerField(primary_key=True)\n    grupocontable = models.CharField(max_length=4, blank=True, null=True)\n    suficosto = models.CharField(max_length=2, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'costos'\n    def __str__(self):\n        return f\"{self.nomcosto}\"",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Subcostos",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Subcostos(models.Model):\n    nomsubcosto = models.CharField(max_length=30, blank=True, null=True)\n    nomcosto = models.CharField(max_length=30, blank=True, null=True)\n    idsubcosto = models.SmallIntegerField(primary_key=True)\n    idcosto = models.SmallIntegerField(blank=True, null=True)\n    sufisubcosto = models.CharField(max_length=2, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'subcostos'\n    def __str__(self):",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Sedes",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Sedes(models.Model):\n    nombresede = models.CharField(max_length=40, blank=True, null=True)\n    cajacompensacion = models.CharField(max_length=60, blank=True, null=True)\n    idsede = models.SmallIntegerField(primary_key=True)\n    codccf = models.CharField(max_length=8, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'sedes'\nclass ModelosContratos(models.Model):\n    idmodelo = models.SmallIntegerField(primary_key=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "ModelosContratos",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class ModelosContratos(models.Model):\n    idmodelo = models.SmallIntegerField(primary_key=True)\n    nombremodelo = models.CharField(max_length=255, blank=True, null=True)\n    tipocontrato = models.CharField(max_length=255, blank=True, null=True)\n    textocontrato = models.CharField(max_length=10485760, blank=True, null=True)\n    estadomodelo = models.SmallIntegerField(blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'modelos_contratos'\nclass Ciudades(models.Model):",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Ciudades",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Ciudades(models.Model):\n    idciudad = models.CharField(max_length=10, primary_key=True)\n    ciudad = models.CharField(max_length=50, db_collation='es_ES', blank=True, null=True)\n    departamento = models.CharField(max_length=50, db_collation='es_ES', blank=True, null=True)\n    codciudad = models.CharField(max_length=10, blank=True, null=True)\n    coddepartamento = models.CharField(max_length=10, blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'ciudades'\nclass Tipoavacaus(models.Model):",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Tipoavacaus",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Tipoavacaus(models.Model):\n    tipovac = models.CharField(max_length=10, primary_key=True)\n    nombrevacaus = models.CharField(max_length=30, blank=True, null=True)\n    def __str__(self):\n        return self.nombrevacaus\n    class Meta:\n        managed = False\n        db_table = 'tipoavacaus'\nclass Vacaciones(models.Model):\n    idempleado = models.ForeignKey(Contratosemp, models.DO_NOTHING, db_column='idempleado', blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Vacaciones",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Vacaciones(models.Model):\n    idempleado = models.ForeignKey(Contratosemp, models.DO_NOTHING, db_column='idempleado', blank=True, null=True)\n    idcontrato = models.ForeignKey(Contratos, models.DO_NOTHING, db_column='idcontrato', blank=True, null=True)\n    fechainicialvac = models.DateField(blank=True, null=True)\n    ultimodiavac = models.DateField(blank=True, null=True)\n    diascalendario = models.SmallIntegerField(blank=True, null=True)\n    diasvac = models.SmallIntegerField(blank=True, null=True)\n    diaspendientes = models.SmallIntegerField(blank=True, null=True)\n    idvacaciones = models.IntegerField(primary_key=True)\n    pagovac = models.IntegerField(blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "EmpVacaciones",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class EmpVacaciones(models.Model):\n    id_sol_vac = models.AutoField(primary_key=True)\n    idcontrato = models.ForeignKey(Contratos, models.DO_NOTHING, db_column='idcontrato', blank=True, null=True)\n    tipovac = models.ForeignKey(Tipoavacaus, models.DO_NOTHING, db_column='tipovac', blank=True, null=True)\n    fechainicialvac = models.DateField(blank=True, null=True)\n    fechafinalvac = models.DateField(blank=True, null=True)\n    estado = models.SmallIntegerField(blank=True, null=True)\n    diasvac = models.SmallIntegerField(blank=True, null=True)\n    cuentasabados = models.SmallIntegerField(blank=True, null=True)\n    diascalendario = models.SmallIntegerField(blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Festivos",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Festivos(models.Model):\n    idfestivo = models.IntegerField(primary_key=True)\n    dia = models.DateField(blank=True, null=True)\n    descripcion = models.CharField(max_length=60, blank=True, null=True)\n    ano = models.SmallIntegerField(blank=True, null=True)\n    class Meta:\n        managed = False\n        db_table = 'festivos'\nclass Ingresosyretenciones(models.Model):\n    idingret = models.SmallIntegerField(primary_key=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "Ingresosyretenciones",
        "kind": 6,
        "importPath": "apps.employees.models",
        "description": "apps.employees.models",
        "peekOfCode": "class Ingresosyretenciones(models.Model):\n    idingret = models.SmallIntegerField(primary_key=True)\n    tipodocumento = models.CharField(blank=True, null=True)\n    docidentidad = models.CharField(blank=True, null=True)\n    papellido = models.CharField(blank=True, null=True)\n    sapellido = models.CharField(blank=True, null=True)\n    pnombre = models.CharField(blank=True, null=True)\n    snombre = models.CharField(blank=True, null=True)\n    salarios = models.IntegerField(blank=True, null=True)\n    honorarios = models.IntegerField(blank=True, null=True)",
        "detail": "apps.employees.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.employees.urls",
        "description": "apps.employees.urls",
        "peekOfCode": "urlpatterns = [\n    path('Certificate/labor',certificaciones_laborales.vista_certificaciones,name='certificaciones' ),\n    path('Certificate/labor/download/<int:idcert>/', certificaciones_laborales.certificatedownload, name='certificatedownload' ),\n    path('Certificate/labor/download/create/', certificaciones_laborales.generateworkcertificate,name='generateworkcertificate' ),\n    path(\n        'vouchers/payroll/',\n        views.comprobantes_nomina.listaNomina,\n        name='comprobantes_all'\n    ),\n    path(",
        "detail": "apps.employees.urls",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.login.migrations.0001_initial",
        "description": "apps.login.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Empresa',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.login.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.login.migrations.0002_token_alter_empresa_options_alter_usuario_options",
        "description": "apps.login.migrations.0002_token_alter_empresa_options_alter_usuario_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('login', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Token',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('token_temporal', models.CharField(max_length=100)),",
        "detail": "apps.login.migrations.0002_token_alter_empresa_options_alter_usuario_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.login.migrations.0003_alter_empresa_table_alter_usuario_table",
        "description": "apps.login.migrations.0003_alter_empresa_table_alter_usuario_table",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('login', '0002_token_alter_empresa_options_alter_usuario_options'),\n    ]\n    operations = [\n        migrations.AlterModelTable(\n            name='empresa',\n            table='login_empresa',\n        ),\n        migrations.AlterModelTable(",
        "detail": "apps.login.migrations.0003_alter_empresa_table_alter_usuario_table",
        "documentation": {}
    },
    {
        "label": "LoginConfig",
        "kind": 6,
        "importPath": "apps.login.appslogin",
        "description": "apps.login.appslogin",
        "peekOfCode": "class LoginConfig(AppConfig):\n    name = 'login'",
        "detail": "apps.login.appslogin",
        "documentation": {}
    },
    {
        "label": "LoginForm",
        "kind": 6,
        "importPath": "apps.login.forms",
        "description": "apps.login.forms",
        "peekOfCode": "class LoginForm(forms.Form):\n    username = forms.CharField(label='Nombre de usuario:',max_length=30, widget=forms.TextInput(attrs={'placeholder': 'Ingrese su nombre de usuario'}))\n    password = forms.CharField(label='Contraseña:', max_length=30, widget=forms.PasswordInput(attrs={'placeholder': 'Ingrese su contraseña'}))\n    def __init__(self, *args, **kwargs):\n        super(LoginForm, self).__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.form_method = 'post'\n        self.helper.layout = Layout(\n            Row(\n                Column('username', css_class='form-group mb-3'),",
        "detail": "apps.login.forms",
        "documentation": {}
    },
    {
        "label": "PasswordResetForm",
        "kind": 6,
        "importPath": "apps.login.forms",
        "description": "apps.login.forms",
        "peekOfCode": "class PasswordResetForm(forms.Form):\n    email = forms.EmailField()\n    def __init__(self, *args, **kwargs):\n        super(PasswordResetForm, self).__init__(*args, **kwargs)\n        self.helper = FormHelper()\n        self.helper.form_method = 'post'\n        self.helper.layout = Layout(\n            Row(\n                Column('email', css_class='form-group mb-2'),\n                css_class='form-row'",
        "detail": "apps.login.forms",
        "documentation": {}
    },
    {
        "label": "PasswordResetTokenForm",
        "kind": 6,
        "importPath": "apps.login.forms",
        "description": "apps.login.forms",
        "peekOfCode": "class PasswordResetTokenForm(forms.Form):\n    username = forms.CharField(label='Username', max_length=150, help_text='Requerido. 150 caracteres o menos. Letras, dígitos y @/./+/-/_ únicamente.')\n    password1 = forms.CharField(label='Password', widget=forms.PasswordInput, help_text='Su contraseña no puede ser demasiado similar a su otra información personal.')\n    password2 = forms.CharField(label='Password confirmation', widget=forms.PasswordInput, help_text='Ingrese la misma contraseña que antes, para verificación.')\n    def clean(self):\n        cleaned_data = super().clean()\n        username = cleaned_data.get('username')\n        password1 = cleaned_data.get('password1')\n        password2 = cleaned_data.get('password2')\n        # Verificar si el nombre de usuario existe",
        "detail": "apps.login.forms",
        "documentation": {}
    },
    {
        "label": "MiFormulario",
        "kind": 6,
        "importPath": "apps.login.forms",
        "description": "apps.login.forms",
        "peekOfCode": "class MiFormulario(forms.Form):\n    def __init__(self, *args, **kwargs):\n        opciones_1 = kwargs.pop('opciones_1', [])\n        opciones_2 = kwargs.pop('opciones_2', [])\n        super(MiFormulario, self).__init__(*args, **kwargs)\n        self.fields['identification_type'] = forms.ChoiceField(\n            choices=[('', '----------')] + [(documento.codigo, documento.documento) for documento in Tipodocumento.objects.all()],\n            label='Tipo de documento de identidad'\n        )\n        self.fields['identification_number'] = forms.IntegerField(label='Documento de Identidad')",
        "detail": "apps.login.forms",
        "documentation": {}
    },
    {
        "label": "authenticate_custom",
        "kind": 2,
        "importPath": "apps.login.funtion",
        "description": "apps.login.funtion",
        "peekOfCode": "def authenticate_custom(username=None, password=None):\n    User = get_user_model()\n    try:\n        user = User.objects.using(\"default\").get(username=username)\n        if user.check_password(password):\n            return user\n        else:\n            return None\n    except User.DoesNotExist:\n        return None",
        "detail": "apps.login.funtion",
        "documentation": {}
    },
    {
        "label": "DatabaseRouterMiddleware",
        "kind": 6,
        "importPath": "apps.login.middlewares",
        "description": "apps.login.middlewares",
        "peekOfCode": "class DatabaseRouterMiddleware(MiddlewareMixin):\n    def process_request(self, request):\n        try:\n            singleton = NombreDBSingleton()\n            if request.user.is_authenticated:\n                if 'usuario' in request.session and 'db' in request.session['usuario'] and not request.path == reverse('login:logout') and not request.path == reverse('login:login'):\n                    db_name = request.session['usuario']['db']\n                    if self.db_has_table(db_name):\n                        singleton.set_nombre_db(db_name)\n        except Exception as e:",
        "detail": "apps.login.middlewares",
        "documentation": {}
    },
    {
        "label": "NombreDBSingleton",
        "kind": 6,
        "importPath": "apps.login.middlewares",
        "description": "apps.login.middlewares",
        "peekOfCode": "class NombreDBSingleton:\n    _instance = None\n    nombre_db = 'default'\n    def __new__(cls, *args, **kwargs):\n        if not cls._instance:\n            cls._instance = super().__new__(cls, *args, **kwargs)\n        return cls._instance\n    def set_nombre_db(self, nombre_db):\n        self.nombre_db = nombre_db\n    def get_nombre_db(self):",
        "detail": "apps.login.middlewares",
        "documentation": {}
    },
    {
        "label": "Usuario",
        "kind": 6,
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "peekOfCode": "class Usuario(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    ROLES = (\n        ('administrator', 'Administrator'),\n        ('employee', 'Employee'),\n        ('accountant', 'Accountant'),\n        ('entrepreneur', 'Entrepreneur'),\n    )\n    role = models.CharField(max_length=20, choices=ROLES)\n    company = models.ForeignKey('Empresa', on_delete=models.CASCADE )",
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Empresa",
        "kind": 6,
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "peekOfCode": "class Empresa(models.Model):\n    name = models.CharField(max_length=100)\n    description = models.TextField()\n    db_name = models.CharField(max_length=100)\n    class Meta:\n        managed = False\n        db_table = 'login_empresa'\n    def __str__(self):\n        return f\"{self.db_name}\"\nclass Token(models.Model):",
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "Token",
        "kind": 6,
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "peekOfCode": "class Token(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    token_temporal = models.CharField(max_length=100)\n    tiempo_creacion = models.DateTimeField(auto_now_add=True)\n    estado = models.BooleanField(default=True)\n    class Meta:\n        managed = False\n        db_table = 'token'\n@receiver(post_save, sender=Token)\ndef eliminar_objeto_despues_dos_horas(sender, instance, **kwargs):",
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "eliminar_objeto_despues_dos_horas",
        "kind": 2,
        "importPath": "apps.login.models",
        "description": "apps.login.models",
        "peekOfCode": "def eliminar_objeto_despues_dos_horas(sender, instance, **kwargs):\n    def cambiar_estado():\n        time.sleep(120)\n        instance.estado = False\n        instance.save()\n    threading.Thread(target=cambiar_estado).start()",
        "detail": "apps.login.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.login.urls",
        "description": "apps.login.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.Login_View.as_view(), name='login'),\n    path('logout/', views.logout_view, name='logout'),\n    path('prueba/', views.prueba, name='prueba'),\n    path('permission/', views.require_permission, name='permission'),\n    path('password/reset/',views.password_reset_view,name='reset' ),\n    path('password/reset/<str:token>',views.password_reset_token,name='resettoken' ),\n]",
        "detail": "apps.login.urls",
        "documentation": {}
    },
    {
        "label": "Login_View",
        "kind": 6,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "class Login_View(View):\n    def get(self, request):        \n        form = LoginForm()\n        return render(request, './users/login.html', {'form': form})\n    def post(self, request):\n        form = LoginForm(request.POST)\n        if form.is_valid():\n            username = form.cleaned_data['username']\n            password = form.cleaned_data['password']\n            user = authenticate(username=username, password=password)",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "logout_view",
        "kind": 2,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "def logout_view(request):\n    logout(request)\n    session = TempSession()\n    session.logout()\n    return redirect('login:login')\ndef password_reset_view(request):\n    if request.method == 'POST':\n        form = PasswordResetForm(request.POST)\n        if form.is_valid():\n            email = form.cleaned_data['email']",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "password_reset_view",
        "kind": 2,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "def password_reset_view(request):\n    if request.method == 'POST':\n        form = PasswordResetForm(request.POST)\n        if form.is_valid():\n            email = form.cleaned_data['email']\n            user = User.objects.filter(email=email).first()\n            if user:\n                token_temporal = secrets.token_urlsafe(50)\n                token = Token.objects.create(\n                    user=user,",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "password_reset_token",
        "kind": 2,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "def password_reset_token(request,token):\n    if Token.objects.filter(token_temporal=token).exists():\n        token = Token.objects.get(token_temporal=token)\n        if request.method == 'POST':\n            form = PasswordResetTokenForm(request.POST)\n            if form.is_valid():\n                username = form.cleaned_data.get('username')\n                password = form.cleaned_data.get('password1')\n                user = User.objects.get(username=username)\n                if user:",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "prueba",
        "kind": 2,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "def prueba(request):\n    if request.method == 'POST':\n        form = MiFormulario(request.POST)\n        if form.is_valid():\n            print(request.POST.get('opciones_1'))\n            print(request.POST.get('opciones_2'))\n            pass\n    else:\n        form = MiFormulario()\n    return render(request, './users/prueba.html',{'form': form})",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "require_permission",
        "kind": 2,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "def require_permission(request):\n    if request.method == 'POST':\n        session = TempSession()\n        return redirect_by_role(session.have_permission())\n    return render(request, './users/permission.html')\n#! errores \ndef custom_400(request, exception):\n    \"\"\"\n    Vista para manejar el error 400 (Bad Request).\n    \"\"\"",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "custom_400",
        "kind": 2,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "def custom_400(request, exception):\n    \"\"\"\n    Vista para manejar el error 400 (Bad Request).\n    \"\"\"\n    return render(request, './error/400.html',{})\ndef custom_403(request, exception):\n    \"\"\"\n    Vista para manejar el error 403 (Forbidden).\n    \"\"\"\n    return render(request, './error/403.html',{})",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "custom_403",
        "kind": 2,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "def custom_403(request, exception):\n    \"\"\"\n    Vista para manejar el error 403 (Forbidden).\n    \"\"\"\n    return render(request, './error/403.html',{})\ndef custom_404(request, exception):\n    \"\"\"\n    Vista para manejar el error 404 (Página no encontrada).\n    \"\"\"\n    return render(request, './error/404.html',{})",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "custom_404",
        "kind": 2,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "def custom_404(request, exception):\n    \"\"\"\n    Vista para manejar el error 404 (Página no encontrada).\n    \"\"\"\n    return render(request, './error/404.html',{})\ndef custom_500(request):\n    \"\"\"\n    Vista para manejar el error 500 (Internal Server Error).\n    \"\"\"\n    return render(request, './error/500.html',{})",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "custom_500",
        "kind": 2,
        "importPath": "apps.login.views",
        "description": "apps.login.views",
        "peekOfCode": "def custom_500(request):\n    \"\"\"\n    Vista para manejar el error 500 (Internal Server Error).\n    \"\"\"\n    return render(request, './error/500.html',{})",
        "detail": "apps.login.views",
        "documentation": {}
    },
    {
        "label": "PayrollConfig",
        "kind": 6,
        "importPath": "apps.payroll.apps",
        "description": "apps.payroll.apps",
        "peekOfCode": "class PayrollConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'payroll'",
        "detail": "apps.payroll.apps",
        "documentation": {}
    },
    {
        "label": "DatabaseRouter",
        "kind": 6,
        "importPath": "nomiweb.db_routers.routers",
        "description": "nomiweb.db_routers.routers",
        "peekOfCode": "class DatabaseRouter:\n    def __init__(self):\n        self.nombre_db_singleton = NombreDBSingleton()\n    @lru_cache(maxsize=None)\n    def table_exists(self, table_name, db_alias='default'):\n        \"\"\"\n        Verifica si una tabla existe en la base de datos especificada.\n        \"\"\"\n        try:\n            with connections[db_alias].cursor() as cursor:",
        "detail": "nomiweb.db_routers.routers",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Cargar las variables de entorno desde el archivo .env\nload_dotenv(dotenv_path=os.path.join(BASE_DIR, '.env'))\nSETTINGS_ENV = 'base'\n# Application definition\nBASE_APPS = [\n    # Django REST Framework\n    'rest_framework',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "SETTINGS_ENV",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "SETTINGS_ENV = 'base'\n# Application definition\nBASE_APPS = [\n    # Django REST Framework\n    'rest_framework',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "BASE_APPS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "BASE_APPS = [\n    # Django REST Framework\n    'rest_framework',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.humanize',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "LOCAL_APPS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "LOCAL_APPS = [\n    # Generated applications\n    'apps.login', \n    'apps.employees',     # Employees application\n    'apps.companies',     # Companies application\n    'apps.administrator',\n    # 'apps.payroll',       # Payroll application\n    # 'apps.api_database',  # API database applicatio#n\n]\nTHIRD_APPS = [",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "THIRD_APPS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "THIRD_APPS = [\n    # Crispy Forms\n    'crispy_forms',\n    \"crispy_bootstrap5\",\n    # Importar excel\n    'import_export',\n    ## Debug toolbar\n    'debug_toolbar',\n]\nINSTALLED_APPS = BASE_APPS + LOCAL_APPS + THIRD_APPS",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "INSTALLED_APPS = BASE_APPS + LOCAL_APPS + THIRD_APPS\nINTERNAL_IPS = [\n    '127.0.0.1',\n]\nCRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'\nCRISPY_TEMPLATE_PACK = 'bootstrap5'\nBASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "INTERNAL_IPS = [\n    '127.0.0.1',\n]\nCRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'\nCRISPY_TEMPLATE_PACK = 'bootstrap5'\nBASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "CRISPY_ALLOWED_TEMPLATE_PACKS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'\nCRISPY_TEMPLATE_PACK = 'bootstrap5'\nBASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = 'bootstrap5'\nBASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'apps.login.middlewares.DatabaseRouterMiddleware',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "BASE_MIDDLEWARE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "BASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'apps.login.middlewares.DatabaseRouterMiddleware',\n    #'allauth.account.middleware.AccountMiddleware',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "LOCAL_MIDDLEWARE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "LOCAL_MIDDLEWARE = [\n]\nTHIRD_MIDDLEWARE = [\n]\nMIDDLEWARE = BASE_MIDDLEWARE + LOCAL_MIDDLEWARE + THIRD_MIDDLEWARE\nROOT_URLCONF = 'nomiweb.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, '..', 'templates')],",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "THIRD_MIDDLEWARE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "THIRD_MIDDLEWARE = [\n]\nMIDDLEWARE = BASE_MIDDLEWARE + LOCAL_MIDDLEWARE + THIRD_MIDDLEWARE\nROOT_URLCONF = 'nomiweb.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, '..', 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "MIDDLEWARE = BASE_MIDDLEWARE + LOCAL_MIDDLEWARE + THIRD_MIDDLEWARE\nROOT_URLCONF = 'nomiweb.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, '..', 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "ROOT_URLCONF = 'nomiweb.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, '..', 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, '..', 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "WSGI_APPLICATION = 'nomiweb.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASE_ROUTERS = [\n    'nomiweb.db_routers.routers.DatabaseRouter'\n]\nAUTHENTICATION_BACKENDS = [\n    'apps.components.custom_auth_backend.CustomAuthBackend',\n    'django.contrib.auth.backends.ModelBackend',  # Esto es opcional, pero es una buena práctica\n]",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "DATABASE_ROUTERS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "DATABASE_ROUTERS = [\n    'nomiweb.db_routers.routers.DatabaseRouter'\n]\nAUTHENTICATION_BACKENDS = [\n    'apps.components.custom_auth_backend.CustomAuthBackend',\n    'django.contrib.auth.backends.ModelBackend',  # Esto es opcional, pero es una buena práctica\n]\nSESSION_ENGINE = 'django.contrib.sessions.backends.db'  # O el backend que estés usando\nSESSION_COOKIE_AGE = 1209600  # Duración de la sesión en segundos (2 semanas)\nSESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "AUTHENTICATION_BACKENDS = [\n    'apps.components.custom_auth_backend.CustomAuthBackend',\n    'django.contrib.auth.backends.ModelBackend',  # Esto es opcional, pero es una buena práctica\n]\nSESSION_ENGINE = 'django.contrib.sessions.backends.db'  # O el backend que estés usando\nSESSION_COOKIE_AGE = 1209600  # Duración de la sesión en segundos (2 semanas)\nSESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "SESSION_ENGINE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # O el backend que estés usando\nSESSION_COOKIE_AGE = 1209600  # Duración de la sesión en segundos (2 semanas)\nSESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_AGE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "SESSION_COOKIE_AGE = 1209600  # Duración de la sesión en segundos (2 semanas)\nSESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "SESSION_SAVE_EVERY_REQUEST",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "SESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "SESSION_EXPIRE_AT_BROWSER_CLOSE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.environ.get('EMAIL_HOST')\nEMAIL_PORT = os.environ.get('EMAIL_PORT')\nEMAIL_USE_TLS = False\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_HOST = os.environ.get('EMAIL_HOST')\nEMAIL_PORT = os.environ.get('EMAIL_PORT')\nEMAIL_USE_TLS = False\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_PORT = os.environ.get('EMAIL_PORT')\nEMAIL_USE_TLS = False\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_USE_TLS = False\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_SSL",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_TIMEOUT",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_KEYFILE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CERTFILE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CAFILE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CERT_SUBJ",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CERT_PASSWD",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CIPHER",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_LOCALTIME",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_FILE_PATH",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_FROM",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "EMAIL_SUBJECT_PREFIX",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "EMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "LANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "TIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "USE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "LOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "#AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "nomiweb.settings.base",
        "description": "nomiweb.settings.base",
        "peekOfCode": "#AUTH_USER_MODEL = 'login.CustomUser'",
        "detail": "nomiweb.settings.base",
        "documentation": {}
    },
    {
        "label": "dotenv_path",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "dotenv_path = os.path.join(os.path.dirname(__file__), '.env')\nload_dotenv(dotenv_path)\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'En_dev_no_importa'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['*']\nSETTINGS_ENV = 'development'\nDATABASES = {\n    'default': {",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "SECRET_KEY = 'En_dev_no_importa'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['*']\nSETTINGS_ENV = 'development'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',\n        'USER':  os.getenv('DB_USER_DEV'),",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['*']\nSETTINGS_ENV = 'development'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',\n        'USER':  os.getenv('DB_USER_DEV'),\n        'PASSWORD':  os.getenv('DB_PASSWORD_DEV'),  \n        'HOST':  os.getenv('DB_HOST_DEV'),",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "ALLOWED_HOSTS = ['*']\nSETTINGS_ENV = 'development'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',\n        'USER':  os.getenv('DB_USER_DEV'),\n        'PASSWORD':  os.getenv('DB_PASSWORD_DEV'),  \n        'HOST':  os.getenv('DB_HOST_DEV'),\n        'PORT':  os.getenv('DB_PORT_DEV'),",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "SETTINGS_ENV",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "SETTINGS_ENV = 'development'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',\n        'USER':  os.getenv('DB_USER_DEV'),\n        'PASSWORD':  os.getenv('DB_PASSWORD_DEV'),  \n        'HOST':  os.getenv('DB_HOST_DEV'),\n        'PORT':  os.getenv('DB_PORT_DEV'),\n    },",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',\n        'USER':  os.getenv('DB_USER_DEV'),\n        'PASSWORD':  os.getenv('DB_PASSWORD_DEV'),  \n        'HOST':  os.getenv('DB_HOST_DEV'),\n        'PORT':  os.getenv('DB_PORT_DEV'),\n    },\n    'lectaen': {",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, '..', 'static')\n]\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, '..', 'static')\n]\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "nomiweb.settings.development",
        "description": "nomiweb.settings.development",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "nomiweb.settings.development",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "SECRET_KEY =  os.getenv('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = False\nALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')\nprint(\"ALLOWED_HOSTS:\", os.getenv('ALLOWED_HOSTS'))\nSETTINGS_ENV = 'production'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "DEBUG = False\nALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')\nprint(\"ALLOWED_HOSTS:\", os.getenv('ALLOWED_HOSTS'))\nSETTINGS_ENV = 'production'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',\n        'USER':  os.getenv('DB_USER_PROD'),\n        'PASSWORD':  os.getenv('DB_PASSWORD_PROD'),",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split(',')\nprint(\"ALLOWED_HOSTS:\", os.getenv('ALLOWED_HOSTS'))\nSETTINGS_ENV = 'production'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',\n        'USER':  os.getenv('DB_USER_PROD'),\n        'PASSWORD':  os.getenv('DB_PASSWORD_PROD'),\n        'HOST':  os.getenv('DB_HOST_PROD'),",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "SETTINGS_ENV",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "SETTINGS_ENV = 'production'\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',\n        'USER':  os.getenv('DB_USER_PROD'),\n        'PASSWORD':  os.getenv('DB_PASSWORD_PROD'),\n        'HOST':  os.getenv('DB_HOST_PROD'),\n        'PORT':  os.getenv('DB_PORT_PROD'),\n    },",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'userlectaen',\n        'USER':  os.getenv('DB_USER_PROD'),\n        'PASSWORD':  os.getenv('DB_PASSWORD_PROD'),\n        'HOST':  os.getenv('DB_HOST_PROD'),\n        'PORT':  os.getenv('DB_PORT_PROD'),\n    },\n    'lectaen': {",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "CSRF_COOKIE_SECURE",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "CSRF_COOKIE_SECURE = True\nSESSION_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = False\nCSRF_TRUSTED_ORIGINS = [\n    'http://127.0.0.1',\n    'http://localhost',\n    'https://nomiweb.com.co',\n    'https://app.nomiweb.com.co',\n]\n# Configuración de S3",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_SECURE",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "SESSION_COOKIE_SECURE = True\nCSRF_COOKIE_HTTPONLY = False\nCSRF_TRUSTED_ORIGINS = [\n    'http://127.0.0.1',\n    'http://localhost',\n    'https://nomiweb.com.co',\n    'https://app.nomiweb.com.co',\n]\n# Configuración de S3\nAWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "CSRF_COOKIE_HTTPONLY",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "CSRF_COOKIE_HTTPONLY = False\nCSRF_TRUSTED_ORIGINS = [\n    'http://127.0.0.1',\n    'http://localhost',\n    'https://nomiweb.com.co',\n    'https://app.nomiweb.com.co',\n]\n# Configuración de S3\nAWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = [\n    'http://127.0.0.1',\n    'http://localhost',\n    'https://nomiweb.com.co',\n    'https://app.nomiweb.com.co',\n]\n# Configuración de S3\nAWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "AWS_ACCESS_KEY_ID",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'us-east-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nAWS_S3_OBJECT_PARAMETERS = {\n    'CacheControl': 'max-age=86400',\n}\n# Almacén estático y de medios\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "AWS_SECRET_ACCESS_KEY",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'us-east-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nAWS_S3_OBJECT_PARAMETERS = {\n    'CacheControl': 'max-age=86400',\n}\n# Almacén estático y de medios\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "AWS_STORAGE_BUCKET_NAME",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'us-east-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nAWS_S3_OBJECT_PARAMETERS = {\n    'CacheControl': 'max-age=86400',\n}\n# Almacén estático y de medios\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# URL estática y de medios",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "AWS_S3_REGION_NAME",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "AWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'us-east-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nAWS_S3_OBJECT_PARAMETERS = {\n    'CacheControl': 'max-age=86400',\n}\n# Almacén estático y de medios\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# URL estática y de medios\nSTATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "AWS_S3_CUSTOM_DOMAIN",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nAWS_S3_OBJECT_PARAMETERS = {\n    'CacheControl': 'max-age=86400',\n}\n# Almacén estático y de medios\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# URL estática y de medios\nSTATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "AWS_S3_OBJECT_PARAMETERS",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "AWS_S3_OBJECT_PARAMETERS = {\n    'CacheControl': 'max-age=86400',\n}\n# Almacén estático y de medios\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# URL estática y de medios\nSTATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "STATICFILES_STORAGE",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\nDEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# URL estática y de medios\nSTATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# Configuración de caché\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_FILE_OVERWRITE = False\nSTATIC_ROOT = os.path.join(BASE_DIR, '..', 'staticfiles')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FILE_STORAGE",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# URL estática y de medios\nSTATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# Configuración de caché\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_FILE_OVERWRITE = False\nSTATIC_ROOT = os.path.join(BASE_DIR, '..', 'staticfiles')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/static/'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# Configuración de caché\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_FILE_OVERWRITE = False\nSTATIC_ROOT = os.path.join(BASE_DIR, '..', 'staticfiles')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/media/'\nSTATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# Configuración de caché\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_FILE_OVERWRITE = False\nSTATIC_ROOT = os.path.join(BASE_DIR, '..', 'staticfiles')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "STATICFILES_STORAGE",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'\n# Configuración de caché\nAWS_QUERYSTRING_AUTH = False\nAWS_S3_FILE_OVERWRITE = False\nSTATIC_ROOT = os.path.join(BASE_DIR, '..', 'staticfiles')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "AWS_QUERYSTRING_AUTH",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "AWS_QUERYSTRING_AUTH = False\nAWS_S3_FILE_OVERWRITE = False\nSTATIC_ROOT = os.path.join(BASE_DIR, '..', 'staticfiles')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "AWS_S3_FILE_OVERWRITE",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "AWS_S3_FILE_OVERWRITE = False\nSTATIC_ROOT = os.path.join(BASE_DIR, '..', 'staticfiles')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "nomiweb.settings.production",
        "description": "nomiweb.settings.production",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, '..', 'staticfiles')",
        "detail": "nomiweb.settings.production",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Cargar las variables de entorno desde el archivo .env\nload_dotenv(dotenv_path=os.path.join(BASE_DIR, '.env'))\nSETTINGS_ENV = 'base'\n# Application definition\nBASE_APPS = [\n    # Django REST Framework\n    'rest_framework',\n    'django.contrib.admin',\n    'django.contrib.auth',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "SETTINGS_ENV",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "SETTINGS_ENV = 'base'\n# Application definition\nBASE_APPS = [\n    # Django REST Framework\n    'rest_framework',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "BASE_APPS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "BASE_APPS = [\n    # Django REST Framework\n    'rest_framework',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.humanize',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "LOCAL_APPS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "LOCAL_APPS = [\n    # Generated applications\n    'apps.login', \n    'apps.employees',     # Employees application\n    'apps.companies',     # Companies application\n    'apps.administrator',\n    # 'apps.payroll',       # Payroll application\n    # 'apps.api_database',  # API database applicatio#n\n]\nTHIRD_APPS = [",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "THIRD_APPS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "THIRD_APPS = [\n    # Crispy Forms\n    'crispy_forms',\n    \"crispy_bootstrap5\",\n    # Importar excel\n    'import_export',\n    ## Debug toolbar\n    'debug_toolbar',\n]\nINSTALLED_APPS = BASE_APPS + LOCAL_APPS + THIRD_APPS",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "INSTALLED_APPS = BASE_APPS + LOCAL_APPS + THIRD_APPS\nINTERNAL_IPS = [\n    '127.0.0.1',\n]\nCRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'\nCRISPY_TEMPLATE_PACK = 'bootstrap5'\nBASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "INTERNAL_IPS = [\n    '127.0.0.1',\n]\nCRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'\nCRISPY_TEMPLATE_PACK = 'bootstrap5'\nBASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "CRISPY_ALLOWED_TEMPLATE_PACKS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "CRISPY_ALLOWED_TEMPLATE_PACKS = 'bootstrap5'\nCRISPY_TEMPLATE_PACK = 'bootstrap5'\nBASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = 'bootstrap5'\nBASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'apps.login.middlewares.DatabaseRouterMiddleware',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "BASE_MIDDLEWARE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "BASE_MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'apps.login.middlewares.DatabaseRouterMiddleware',\n    #'allauth.account.middleware.AccountMiddleware',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "LOCAL_MIDDLEWARE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "LOCAL_MIDDLEWARE = [\n]\nTHIRD_MIDDLEWARE = [\n]\nMIDDLEWARE = BASE_MIDDLEWARE + LOCAL_MIDDLEWARE + THIRD_MIDDLEWARE\nROOT_URLCONF = 'nomiweb.urls'\n=======\n# \"\"\"\n# Django settings for nomiweb project.\n# Generated by 'django-admin startproject' using Django 5.0.3.",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "THIRD_MIDDLEWARE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "THIRD_MIDDLEWARE = [\n]\nMIDDLEWARE = BASE_MIDDLEWARE + LOCAL_MIDDLEWARE + THIRD_MIDDLEWARE\nROOT_URLCONF = 'nomiweb.urls'\n=======\n# \"\"\"\n# Django settings for nomiweb project.\n# Generated by 'django-admin startproject' using Django 5.0.3.\n# For more information on this file, see\n# https://docs.djangoproject.com/en/5.0/topics/settings/",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "MIDDLEWARE = BASE_MIDDLEWARE + LOCAL_MIDDLEWARE + THIRD_MIDDLEWARE\nROOT_URLCONF = 'nomiweb.urls'\n=======\n# \"\"\"\n# Django settings for nomiweb project.\n# Generated by 'django-admin startproject' using Django 5.0.3.\n# For more information on this file, see\n# https://docs.djangoproject.com/en/5.0/topics/settings/\n# For the full list of settings and their values, see\n# https://docs.djangoproject.com/en/5.0/ref/settings/",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "ROOT_URLCONF = 'nomiweb.urls'\n=======\n# \"\"\"\n# Django settings for nomiweb project.\n# Generated by 'django-admin startproject' using Django 5.0.3.\n# For more information on this file, see\n# https://docs.djangoproject.com/en/5.0/topics/settings/\n# For the full list of settings and their values, see\n# https://docs.djangoproject.com/en/5.0/ref/settings/\n# \"\"\"",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, '..', 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "WSGI_APPLICATION = 'nomiweb.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASE_ROUTERS = [\n    'nomiweb.db_routers.routers.DatabaseRouter'\n]\nAUTHENTICATION_BACKENDS = [\n    'apps.components.custom_auth_backend.CustomAuthBackend',\n    'django.contrib.auth.backends.ModelBackend',  # Esto es opcional, pero es una buena práctica\n]",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "DATABASE_ROUTERS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "DATABASE_ROUTERS = [\n    'nomiweb.db_routers.routers.DatabaseRouter'\n]\nAUTHENTICATION_BACKENDS = [\n    'apps.components.custom_auth_backend.CustomAuthBackend',\n    'django.contrib.auth.backends.ModelBackend',  # Esto es opcional, pero es una buena práctica\n]\nSESSION_ENGINE = 'django.contrib.sessions.backends.db'  # O el backend que estés usando\nSESSION_COOKIE_AGE = 1209600  # Duración de la sesión en segundos (2 semanas)\nSESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "AUTHENTICATION_BACKENDS = [\n    'apps.components.custom_auth_backend.CustomAuthBackend',\n    'django.contrib.auth.backends.ModelBackend',  # Esto es opcional, pero es una buena práctica\n]\nSESSION_ENGINE = 'django.contrib.sessions.backends.db'  # O el backend que estés usando\nSESSION_COOKIE_AGE = 1209600  # Duración de la sesión en segundos (2 semanas)\nSESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n=======\n# TEMPLATES = [",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "SESSION_ENGINE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # O el backend que estés usando\nSESSION_COOKIE_AGE = 1209600  # Duración de la sesión en segundos (2 semanas)\nSESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n=======\n# TEMPLATES = [\n#     {\n#         'BACKEND': 'django.template.backends.django.DjangoTemplates',\n#         'DIRS': [os.path.join(BASE_DIR, 'templates')],\n#         'APP_DIRS': True,",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_AGE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "SESSION_COOKIE_AGE = 1209600  # Duración de la sesión en segundos (2 semanas)\nSESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n=======\n# TEMPLATES = [\n#     {\n#         'BACKEND': 'django.template.backends.django.DjangoTemplates',\n#         'DIRS': [os.path.join(BASE_DIR, 'templates')],\n#         'APP_DIRS': True,\n#         'OPTIONS': {",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "SESSION_SAVE_EVERY_REQUEST",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "SESSION_SAVE_EVERY_REQUEST = True  # Guardar la sesión en cada solicitud\nSESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n=======\n# TEMPLATES = [\n#     {\n#         'BACKEND': 'django.template.backends.django.DjangoTemplates',\n#         'DIRS': [os.path.join(BASE_DIR, 'templates')],\n#         'APP_DIRS': True,\n#         'OPTIONS': {\n#             'context_processors': [",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "SESSION_EXPIRE_AT_BROWSER_CLOSE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "SESSION_EXPIRE_AT_BROWSER_CLOSE = True  # No expirar la sesión al cerrar el navegador\n=======\n# TEMPLATES = [\n#     {\n#         'BACKEND': 'django.template.backends.django.DjangoTemplates',\n#         'DIRS': [os.path.join(BASE_DIR, 'templates')],\n#         'APP_DIRS': True,\n#         'OPTIONS': {\n#             'context_processors': [\n#                 'django.template.context_processors.debug',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = os.environ.get('EMAIL_HOST')\nEMAIL_PORT = os.environ.get('EMAIL_PORT')\nEMAIL_USE_TLS = False\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_HOST = os.environ.get('EMAIL_HOST')\nEMAIL_PORT = os.environ.get('EMAIL_PORT')\nEMAIL_USE_TLS = False\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_PORT = os.environ.get('EMAIL_PORT')\nEMAIL_USE_TLS = False\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_USE_TLS = False\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\nEMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_SSL",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_USE_SSL = True\nEMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_TIMEOUT",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_TIMEOUT = None\nEMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_KEYFILE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_SSL_KEYFILE = None\nEMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CERTFILE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_SSL_CERTFILE = None\nEMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CAFILE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_SSL_CAFILE = None\nEMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CERT_SUBJ",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_SSL_CERT_SUBJ = None\nEMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CERT_PASSWD",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_SSL_CERT_PASSWD = None\nEMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_SSL_CIPHER",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_SSL_CIPHER = None\nEMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_LOCALTIME",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_USE_LOCALTIME = False\nEMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_FILE_PATH",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_FILE_PATH = None\nEMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_FROM",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_FROM = None\nEMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "EMAIL_SUBJECT_PREFIX",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "EMAIL_SUBJECT_PREFIX = '[Django] '\n# Internationalization\n# https://docs.djangoproject.com/en/5.0/topics/i18n/\nLANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "LANGUAGE_CODE = 'es-co'\nTIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "TIME_ZONE = 'America/Bogota'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'\n=======\n# # Password validation",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'\n=======\n# # Password validation\n# # https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "USE_TZ = True\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'\n=======\n# # Password validation\n# # https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n# AUTH_PASSWORD_VALIDATORS = [",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'\n=======\n# # Password validation\n# # https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n# AUTH_PASSWORD_VALIDATORS = [\n#     {\n#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n#     },",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "LOGIN_REDIRECT_URL = '/'\n#AUTH_USER_MODEL = 'login.CustomUser'\n=======\n# # Password validation\n# # https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n# AUTH_PASSWORD_VALIDATORS = [\n#     {\n#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n#     },\n#     {",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "#AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "nomiweb.settings_old",
        "description": "nomiweb.settings_old",
        "peekOfCode": "#AUTH_USER_MODEL = 'login.CustomUser'\n=======\n# # Password validation\n# # https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\n# AUTH_PASSWORD_VALIDATORS = [\n#     {\n#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n#     },\n#     {\n#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',",
        "detail": "nomiweb.settings_old",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "nomiweb.urls",
        "description": "nomiweb.urls",
        "peekOfCode": "urlpatterns = [\n    path('', include(('apps.login.urls', 'login'))),\n    path('employees/', include(('apps.employees.urls', 'employees'))),\n    path('companies/', include(('apps.companies.urls', 'companies'))),\n    path('admin/', include(('apps.administrator.urls', 'admin'))),\n]+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\n# Si DEBUG está activado, agrega las URLs de Django Debug Toolbar\nif settings.DEBUG:\n    urlpatterns = [\n        path('__debug__/', include(debug_toolbar.urls)),",
        "detail": "nomiweb.urls",
        "documentation": {}
    },
    {
        "label": "#handler400",
        "kind": 5,
        "importPath": "nomiweb.urls",
        "description": "nomiweb.urls",
        "peekOfCode": "#handler400 = custom_400  # Configura la vista custom_400 para manejar el error 400\n#handler403 = custom_403  # Configura la vista custom_403 para manejar el error 403\nhandler404 = 'apps.login.views.custom_404' # Configura la vista custom_404 para manejar el error 404\nhandler500 = 'apps.login.views.custom_500'  # Configura la vista custom_500 para manejar el error 500",
        "detail": "nomiweb.urls",
        "documentation": {}
    },
    {
        "label": "#handler403",
        "kind": 5,
        "importPath": "nomiweb.urls",
        "description": "nomiweb.urls",
        "peekOfCode": "#handler403 = custom_403  # Configura la vista custom_403 para manejar el error 403\nhandler404 = 'apps.login.views.custom_404' # Configura la vista custom_404 para manejar el error 404\nhandler500 = 'apps.login.views.custom_500'  # Configura la vista custom_500 para manejar el error 500",
        "detail": "nomiweb.urls",
        "documentation": {}
    },
    {
        "label": "handler404",
        "kind": 5,
        "importPath": "nomiweb.urls",
        "description": "nomiweb.urls",
        "peekOfCode": "handler404 = 'apps.login.views.custom_404' # Configura la vista custom_404 para manejar el error 404\nhandler500 = 'apps.login.views.custom_500'  # Configura la vista custom_500 para manejar el error 500",
        "detail": "nomiweb.urls",
        "documentation": {}
    },
    {
        "label": "handler500",
        "kind": 5,
        "importPath": "nomiweb.urls",
        "description": "nomiweb.urls",
        "peekOfCode": "handler500 = 'apps.login.views.custom_500'  # Configura la vista custom_500 para manejar el error 500",
        "detail": "nomiweb.urls",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "nomiweb.wsgi",
        "description": "nomiweb.wsgi",
        "peekOfCode": "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\nload_dotenv(dotenv_path=os.path.join(BASE_DIR, '.env'))\nos.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nomiweb.settings.production')\napplication = get_wsgi_application()",
        "detail": "nomiweb.wsgi",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "nomiweb.wsgi",
        "description": "nomiweb.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "nomiweb.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nomiweb.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]